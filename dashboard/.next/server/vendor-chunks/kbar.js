"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/kbar";
exports.ids = ["vendor-chunks/kbar"];
exports.modules = {

/***/ "(ssr)/./node_modules/kbar/lib/InternalEvents.js":
/*!*************************************************!*\
  !*** ./node_modules/kbar/lib/InternalEvents.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.InternalEvents = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar tinykeys_1 = __importDefault(__webpack_require__(/*! ./tinykeys */ \"(ssr)/./node_modules/kbar/lib/tinykeys.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nfunction InternalEvents() {\n    useToggleHandler();\n    useDocumentLock();\n    useShortcuts();\n    useFocusHandler();\n    return null;\n}\nexports.InternalEvents = InternalEvents;\n/**\n * `useToggleHandler` handles the keyboard events for toggling kbar.\n */ function useToggleHandler() {\n    var _a, _b;\n    var _c = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            visualState: state.visualState,\n            showing: state.visualState !== types_1.VisualState.hidden,\n            disabled: state.disabled\n        };\n    }), query = _c.query, options = _c.options, visualState = _c.visualState, showing = _c.showing, disabled = _c.disabled;\n    React.useEffect(function() {\n        var _a;\n        var close = function() {\n            query.setVisualState(function(vs) {\n                if (vs === types_1.VisualState.hidden || vs === types_1.VisualState.animatingOut) {\n                    return vs;\n                }\n                return types_1.VisualState.animatingOut;\n            });\n        };\n        if (disabled) {\n            close();\n            return;\n        }\n        var shortcut = options.toggleShortcut || \"$mod+k\";\n        var unsubscribe = (0, tinykeys_1.default)(window, (_a = {}, _a[shortcut] = function(event) {\n            var _a, _b, _c, _d;\n            if (event.defaultPrevented) return;\n            event.preventDefault();\n            query.toggle();\n            if (showing) {\n                (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            } else {\n                (_d = (_c = options.callbacks) === null || _c === void 0 ? void 0 : _c.onOpen) === null || _d === void 0 ? void 0 : _d.call(_c);\n            }\n        }, _a.Escape = function(event) {\n            var _a, _b;\n            if (showing) {\n                event.stopPropagation();\n                event.preventDefault();\n                (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n            close();\n        }, _a));\n        return function() {\n            unsubscribe();\n        };\n    }, [\n        options.callbacks,\n        options.toggleShortcut,\n        query,\n        showing,\n        disabled\n    ]);\n    var timeoutRef = React.useRef();\n    var runAnimateTimer = React.useCallback(function(vs) {\n        var _a, _b;\n        var ms = 0;\n        if (vs === types_1.VisualState.animatingIn) {\n            ms = ((_a = options.animations) === null || _a === void 0 ? void 0 : _a.enterMs) || 0;\n        }\n        if (vs === types_1.VisualState.animatingOut) {\n            ms = ((_b = options.animations) === null || _b === void 0 ? void 0 : _b.exitMs) || 0;\n        }\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = setTimeout(function() {\n            var backToRoot = false;\n            // TODO: setVisualState argument should be a function or just a VisualState value.\n            query.setVisualState(function() {\n                var finalVs = vs === types_1.VisualState.animatingIn ? types_1.VisualState.showing : types_1.VisualState.hidden;\n                if (finalVs === types_1.VisualState.hidden) {\n                    backToRoot = true;\n                }\n                return finalVs;\n            });\n            if (backToRoot) {\n                query.setCurrentRootAction(null);\n            }\n        }, ms);\n    }, [\n        (_a = options.animations) === null || _a === void 0 ? void 0 : _a.enterMs,\n        (_b = options.animations) === null || _b === void 0 ? void 0 : _b.exitMs,\n        query\n    ]);\n    React.useEffect(function() {\n        switch(visualState){\n            case types_1.VisualState.animatingIn:\n            case types_1.VisualState.animatingOut:\n                runAnimateTimer(visualState);\n                break;\n        }\n    }, [\n        runAnimateTimer,\n        visualState\n    ]);\n}\n/**\n * `useDocumentLock` is a simple implementation for preventing the\n * underlying page content from scrolling when kbar is open.\n */ function useDocumentLock() {\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            visualState: state.visualState\n        };\n    }), visualState = _a.visualState, options = _a.options;\n    React.useEffect(function() {\n        if (options.disableDocumentLock) return;\n        if (visualState === types_1.VisualState.animatingIn) {\n            document.body.style.overflow = \"hidden\";\n            if (!options.disableScrollbarManagement) {\n                var scrollbarWidth = (0, utils_1.getScrollbarWidth)();\n                // take into account the margins explicitly added by the consumer\n                var mr = getComputedStyle(document.body)[\"margin-right\"];\n                if (mr) {\n                    // remove non-numeric values; px, rem, em, etc.\n                    scrollbarWidth += Number(mr.replace(/\\D/g, \"\"));\n                }\n                document.body.style.marginRight = scrollbarWidth + \"px\";\n            }\n        } else if (visualState === types_1.VisualState.hidden) {\n            document.body.style.removeProperty(\"overflow\");\n            if (!options.disableScrollbarManagement) {\n                document.body.style.removeProperty(\"margin-right\");\n            }\n        }\n    }, [\n        options.disableDocumentLock,\n        options.disableScrollbarManagement,\n        visualState\n    ]);\n}\n/**\n * Reference: https://github.com/jamiebuilds/tinykeys/issues/37\n *\n * Fixes an issue where simultaneous key commands for shortcuts;\n * ie given two actions with shortcuts ['t','s'] and ['s'], pressing\n * 't' and 's' consecutively will cause both shortcuts to fire.\n *\n * `wrap` sets each keystroke event in a WeakSet, and ensures that\n * if ['t', 's'] are pressed, then the subsequent ['s'] event will\n * be ignored. This depends on the order in which we register the\n * shortcuts to tinykeys, which is handled below.\n */ var handled = new WeakSet();\nfunction wrap(handler) {\n    return function(event) {\n        if (handled.has(event)) return;\n        handler(event);\n        handled.add(event);\n    };\n}\n/**\n * `useShortcuts` registers and listens to keyboard strokes and\n * performs actions for patterns that match the user defined `shortcut`.\n */ function useShortcuts() {\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            actions: state.actions,\n            open: state.visualState === types_1.VisualState.showing,\n            disabled: state.disabled\n        };\n    }), actions = _a.actions, query = _a.query, open = _a.open, options = _a.options, disabled = _a.disabled;\n    React.useEffect(function() {\n        var _a;\n        if (open || disabled) return;\n        var actionsList = Object.keys(actions).map(function(key) {\n            return actions[key];\n        });\n        var actionsWithShortcuts = [];\n        for(var _i = 0, actionsList_1 = actionsList; _i < actionsList_1.length; _i++){\n            var action = actionsList_1[_i];\n            if (!((_a = action.shortcut) === null || _a === void 0 ? void 0 : _a.length)) {\n                continue;\n            }\n            actionsWithShortcuts.push(action);\n        }\n        actionsWithShortcuts = actionsWithShortcuts.sort(function(a, b) {\n            return b.shortcut.join(\" \").length - a.shortcut.join(\" \").length;\n        });\n        var shortcutsMap = {};\n        var _loop_1 = function(action) {\n            var shortcut = action.shortcut.join(\" \");\n            shortcutsMap[shortcut] = wrap(function(event) {\n                var _a, _b, _c, _d, _e, _f;\n                if ((0, utils_1.shouldRejectKeystrokes)()) return;\n                event.preventDefault();\n                if ((_a = action.children) === null || _a === void 0 ? void 0 : _a.length) {\n                    query.setCurrentRootAction(action.id);\n                    query.toggle();\n                    (_c = (_b = options.callbacks) === null || _b === void 0 ? void 0 : _b.onOpen) === null || _c === void 0 ? void 0 : _c.call(_b);\n                } else {\n                    (_d = action.command) === null || _d === void 0 ? void 0 : _d.perform();\n                    (_f = (_e = options.callbacks) === null || _e === void 0 ? void 0 : _e.onSelectAction) === null || _f === void 0 ? void 0 : _f.call(_e, action);\n                }\n            });\n        };\n        for(var _b = 0, actionsWithShortcuts_1 = actionsWithShortcuts; _b < actionsWithShortcuts_1.length; _b++){\n            var action = actionsWithShortcuts_1[_b];\n            _loop_1(action);\n        }\n        var unsubscribe = (0, tinykeys_1.default)(window, shortcutsMap, {\n            timeout: 400\n        });\n        return function() {\n            unsubscribe();\n        };\n    }, [\n        actions,\n        open,\n        options.callbacks,\n        query,\n        disabled\n    ]);\n}\n/**\n * `useFocusHandler` ensures that focus is set back on the element which was\n * in focus prior to kbar being triggered.\n */ function useFocusHandler() {\n    var rFirstRender = React.useRef(true);\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            isShowing: state.visualState === types_1.VisualState.showing || state.visualState === types_1.VisualState.animatingIn\n        };\n    }), isShowing = _a.isShowing, query = _a.query;\n    var activeElementRef = React.useRef(null);\n    React.useEffect(function() {\n        if (rFirstRender.current) {\n            rFirstRender.current = false;\n            return;\n        }\n        if (isShowing) {\n            activeElementRef.current = document.activeElement;\n            return;\n        }\n        // This fixes an issue on Safari where closing kbar causes the entire\n        // page to scroll to the bottom. The reason this was happening was due\n        // to the search input still in focus when we removed it from the dom.\n        var currentActiveElement = document.activeElement;\n        if ((currentActiveElement === null || currentActiveElement === void 0 ? void 0 : currentActiveElement.tagName.toLowerCase()) === \"input\") {\n            currentActiveElement.blur();\n        }\n        var activeElement = activeElementRef.current;\n        if (activeElement && activeElement !== currentActiveElement) {\n            activeElement.focus();\n        }\n    }, [\n        isShowing\n    ]);\n    // When focus is blurred from the search input while kbar is still\n    // open, any keystroke should set focus back to the search input.\n    React.useEffect(function() {\n        function handler(event) {\n            var input = query.getInput();\n            if (event.target !== input) {\n                input.focus();\n            }\n        }\n        if (isShowing) {\n            window.addEventListener(\"keydown\", handler);\n            return function() {\n                window.removeEventListener(\"keydown\", handler);\n            };\n        }\n    }, [\n        isShowing,\n        query\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/InternalEvents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarAnimator.js":
/*!***********************************************!*\
  !*** ./node_modules/kbar/lib/KBarAnimator.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarAnimator = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar appearanceAnimationKeyframes = [\n    {\n        opacity: 0,\n        transform: \"scale(.99)\"\n    },\n    {\n        opacity: 1,\n        transform: \"scale(1.01)\"\n    },\n    {\n        opacity: 1,\n        transform: \"scale(1)\"\n    }\n];\nvar bumpAnimationKeyframes = [\n    {\n        transform: \"scale(1)\"\n    },\n    {\n        transform: \"scale(.98)\"\n    },\n    {\n        transform: \"scale(1)\"\n    }\n];\nvar KBarAnimator = function(_a) {\n    var _b, _c;\n    var children = _a.children, style = _a.style, className = _a.className, disableCloseOnOuterClick = _a.disableCloseOnOuterClick;\n    var _d = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            visualState: state.visualState,\n            currentRootActionId: state.currentRootActionId\n        };\n    }), visualState = _d.visualState, currentRootActionId = _d.currentRootActionId, query = _d.query, options = _d.options;\n    var outerRef = React.useRef(null);\n    var innerRef = React.useRef(null);\n    var enterMs = ((_b = options === null || options === void 0 ? void 0 : options.animations) === null || _b === void 0 ? void 0 : _b.enterMs) || 0;\n    var exitMs = ((_c = options === null || options === void 0 ? void 0 : options.animations) === null || _c === void 0 ? void 0 : _c.exitMs) || 0;\n    // Show/hide animation\n    React.useEffect(function() {\n        if (visualState === types_1.VisualState.showing) {\n            return;\n        }\n        var duration = visualState === types_1.VisualState.animatingIn ? enterMs : exitMs;\n        var element = outerRef.current;\n        element === null || element === void 0 ? void 0 : element.animate(appearanceAnimationKeyframes, {\n            duration: duration,\n            easing: // TODO: expose easing in options\n            visualState === types_1.VisualState.animatingOut ? \"ease-in\" : \"ease-out\",\n            direction: visualState === types_1.VisualState.animatingOut ? \"reverse\" : \"normal\",\n            fill: \"forwards\"\n        });\n    }, [\n        options,\n        visualState,\n        enterMs,\n        exitMs\n    ]);\n    // Height animation\n    var previousHeight = React.useRef();\n    React.useEffect(function() {\n        // Only animate if we're actually showing\n        if (visualState === types_1.VisualState.showing) {\n            var outer_1 = outerRef.current;\n            var inner_1 = innerRef.current;\n            if (!outer_1 || !inner_1) {\n                return;\n            }\n            var ro_1 = new ResizeObserver(function(entries) {\n                for(var _i = 0, entries_1 = entries; _i < entries_1.length; _i++){\n                    var entry = entries_1[_i];\n                    var cr = entry.contentRect;\n                    if (!previousHeight.current) {\n                        previousHeight.current = cr.height;\n                    }\n                    outer_1.animate([\n                        {\n                            height: previousHeight.current + \"px\"\n                        },\n                        {\n                            height: cr.height + \"px\"\n                        }\n                    ], {\n                        duration: enterMs / 2,\n                        // TODO: expose configs here\n                        easing: \"ease-out\",\n                        fill: \"forwards\"\n                    });\n                    previousHeight.current = cr.height;\n                }\n            });\n            ro_1.observe(inner_1);\n            return function() {\n                ro_1.unobserve(inner_1);\n            };\n        }\n    }, [\n        visualState,\n        options,\n        enterMs,\n        exitMs\n    ]);\n    // Bump animation between nested actions\n    var firstRender = React.useRef(true);\n    React.useEffect(function() {\n        if (firstRender.current) {\n            firstRender.current = false;\n            return;\n        }\n        var element = outerRef.current;\n        if (element) {\n            element.animate(bumpAnimationKeyframes, {\n                duration: enterMs,\n                easing: \"ease-out\"\n            });\n        }\n    }, [\n        currentRootActionId,\n        enterMs\n    ]);\n    (0, utils_1.useOuterClick)(outerRef, function() {\n        var _a, _b;\n        if (disableCloseOnOuterClick) {\n            return;\n        }\n        query.setVisualState(types_1.VisualState.animatingOut);\n        (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n    });\n    return React.createElement(\"div\", {\n        ref: outerRef,\n        style: __assign(__assign(__assign({}, appearanceAnimationKeyframes[0]), style), {\n            pointerEvents: \"auto\"\n        }),\n        className: className\n    }, React.createElement(\"div\", {\n        ref: innerRef\n    }, children));\n};\nexports.KBarAnimator = KBarAnimator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarAnimator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarContextProvider.js":
/*!******************************************************!*\
  !*** ./node_modules/kbar/lib/KBarContextProvider.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarProvider = exports.KBarContext = void 0;\nvar useStore_1 = __webpack_require__(/*! ./useStore */ \"(ssr)/./node_modules/kbar/lib/useStore.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar InternalEvents_1 = __webpack_require__(/*! ./InternalEvents */ \"(ssr)/./node_modules/kbar/lib/InternalEvents.js\");\nexports.KBarContext = React.createContext({});\nvar KBarProvider = function(props) {\n    var contextValue = (0, useStore_1.useStore)(props);\n    return React.createElement(exports.KBarContext.Provider, {\n        value: contextValue\n    }, React.createElement(InternalEvents_1.InternalEvents, null), props.children);\n};\nexports.KBarProvider = KBarProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhckNvbnRleHRQcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JKLE9BQU9PLGNBQWMsQ0FBQ0wsR0FBR0csSUFBSTtRQUFFRyxZQUFZO1FBQU1DLEtBQUs7WUFBYSxPQUFPTixDQUFDLENBQUNDLEVBQUU7UUFBRTtJQUFFO0FBQ3RGLElBQU0sU0FBU0YsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSU0scUJBQXFCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsa0JBQWtCLElBQU1WLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVTLENBQUM7SUFDekZYLE9BQU9PLGNBQWMsQ0FBQ0wsR0FBRyxXQUFXO1FBQUVNLFlBQVk7UUFBTUksT0FBT0Q7SUFBRTtBQUNyRSxJQUFLLFNBQVNULENBQUMsRUFBRVMsQ0FBQztJQUNkVCxDQUFDLENBQUMsVUFBVSxHQUFHUztBQUNuQjtBQUNBLElBQUlFLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBVUMsR0FBRztJQUMzRCxJQUFJQSxPQUFPQSxJQUFJQyxVQUFVLEVBQUUsT0FBT0Q7SUFDbEMsSUFBSUUsU0FBUyxDQUFDO0lBQ2QsSUFBSUYsT0FBTyxNQUFNO1FBQUEsSUFBSyxJQUFJVixLQUFLVSxJQUFLLElBQUlWLE1BQU0sYUFBYUosT0FBT2lCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNMLEtBQUtWLElBQUlMLGdCQUFnQmlCLFFBQVFGLEtBQUtWO0lBQUU7SUFDeElNLG1CQUFtQk0sUUFBUUY7SUFDM0IsT0FBT0U7QUFDWDtBQUNBaEIsOENBQTZDO0lBQUVZLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RRLG9CQUFvQixHQUFHQSxtQkFBbUIsR0FBRyxLQUFLO0FBQ2xELElBQUlHLGFBQWFDLG1CQUFPQSxDQUFDLDZEQUFZO0FBQ3JDLElBQUlDLFFBQVFaLGFBQWFXLG1CQUFPQSxDQUFDLHdHQUFPO0FBQ3hDLElBQUlFLG1CQUFtQkYsbUJBQU9BLENBQUMseUVBQWtCO0FBQ2pESixtQkFBbUIsR0FBR0ssTUFBTUUsYUFBYSxDQUFDLENBQUM7QUFDM0MsSUFBSU4sZUFBZSxTQUFVTyxLQUFLO0lBQzlCLElBQUlDLGVBQWUsQ0FBQyxHQUFHTixXQUFXTyxRQUFRLEVBQUVGO0lBQzVDLE9BQVFILE1BQU1NLGFBQWEsQ0FBQ1gsUUFBUUUsV0FBVyxDQUFDVSxRQUFRLEVBQUU7UUFBRXBCLE9BQU9pQjtJQUFhLEdBQzVFSixNQUFNTSxhQUFhLENBQUNMLGlCQUFpQk8sY0FBYyxFQUFFLE9BQ3JETCxNQUFNTSxRQUFRO0FBQ3RCO0FBQ0FkLG9CQUFvQixHQUFHQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi9LQmFyQ29udGV4dFByb3ZpZGVyLmpzP2NiNDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS0JhclByb3ZpZGVyID0gZXhwb3J0cy5LQmFyQ29udGV4dCA9IHZvaWQgMDtcbnZhciB1c2VTdG9yZV8xID0gcmVxdWlyZShcIi4vdXNlU3RvcmVcIik7XG52YXIgUmVhY3QgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcInJlYWN0XCIpKTtcbnZhciBJbnRlcm5hbEV2ZW50c18xID0gcmVxdWlyZShcIi4vSW50ZXJuYWxFdmVudHNcIik7XG5leHBvcnRzLktCYXJDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCh7fSk7XG52YXIgS0JhclByb3ZpZGVyID0gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgdmFyIGNvbnRleHRWYWx1ZSA9ICgwLCB1c2VTdG9yZV8xLnVzZVN0b3JlKShwcm9wcyk7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KGV4cG9ydHMuS0JhckNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGNvbnRleHRWYWx1ZSB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEludGVybmFsRXZlbnRzXzEuSW50ZXJuYWxFdmVudHMsIG51bGwpLFxuICAgICAgICBwcm9wcy5jaGlsZHJlbikpO1xufTtcbmV4cG9ydHMuS0JhclByb3ZpZGVyID0gS0JhclByb3ZpZGVyO1xuIl0sIm5hbWVzIjpbIl9fY3JlYXRlQmluZGluZyIsIk9iamVjdCIsImNyZWF0ZSIsIm8iLCJtIiwiayIsImsyIiwidW5kZWZpbmVkIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX19zZXRNb2R1bGVEZWZhdWx0IiwidiIsInZhbHVlIiwiX19pbXBvcnRTdGFyIiwibW9kIiwiX19lc01vZHVsZSIsInJlc3VsdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImV4cG9ydHMiLCJLQmFyUHJvdmlkZXIiLCJLQmFyQ29udGV4dCIsInVzZVN0b3JlXzEiLCJyZXF1aXJlIiwiUmVhY3QiLCJJbnRlcm5hbEV2ZW50c18xIiwiY3JlYXRlQ29udGV4dCIsInByb3BzIiwiY29udGV4dFZhbHVlIiwidXNlU3RvcmUiLCJjcmVhdGVFbGVtZW50IiwiUHJvdmlkZXIiLCJJbnRlcm5hbEV2ZW50cyIsImNoaWxkcmVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarContextProvider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarPortal.js":
/*!*********************************************!*\
  !*** ./node_modules/kbar/lib/KBarPortal.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarPortal = void 0;\nvar react_portal_1 = __webpack_require__(/*! @radix-ui/react-portal */ \"(ssr)/./node_modules/@radix-ui/react-portal/dist/index.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nfunction KBarPortal(_a) {\n    var children = _a.children, container = _a.container;\n    var showing = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            showing: state.visualState !== types_1.VisualState.hidden\n        };\n    }).showing;\n    if (!showing) {\n        return null;\n    }\n    return React.createElement(react_portal_1.Portal, {\n        container: container\n    }, children);\n}\nexports.KBarPortal = KBarPortal;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclBvcnRhbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JKLE9BQU9PLGNBQWMsQ0FBQ0wsR0FBR0csSUFBSTtRQUFFRyxZQUFZO1FBQU1DLEtBQUs7WUFBYSxPQUFPTixDQUFDLENBQUNDLEVBQUU7UUFBRTtJQUFFO0FBQ3RGLElBQU0sU0FBU0YsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSU0scUJBQXFCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsa0JBQWtCLElBQU1WLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVTLENBQUM7SUFDekZYLE9BQU9PLGNBQWMsQ0FBQ0wsR0FBRyxXQUFXO1FBQUVNLFlBQVk7UUFBTUksT0FBT0Q7SUFBRTtBQUNyRSxJQUFLLFNBQVNULENBQUMsRUFBRVMsQ0FBQztJQUNkVCxDQUFDLENBQUMsVUFBVSxHQUFHUztBQUNuQjtBQUNBLElBQUlFLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBVUMsR0FBRztJQUMzRCxJQUFJQSxPQUFPQSxJQUFJQyxVQUFVLEVBQUUsT0FBT0Q7SUFDbEMsSUFBSUUsU0FBUyxDQUFDO0lBQ2QsSUFBSUYsT0FBTyxNQUFNO1FBQUEsSUFBSyxJQUFJVixLQUFLVSxJQUFLLElBQUlWLE1BQU0sYUFBYUosT0FBT2lCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNMLEtBQUtWLElBQUlMLGdCQUFnQmlCLFFBQVFGLEtBQUtWO0lBQUU7SUFDeElNLG1CQUFtQk0sUUFBUUY7SUFDM0IsT0FBT0U7QUFDWDtBQUNBaEIsOENBQTZDO0lBQUVZLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RRLGtCQUFrQixHQUFHLEtBQUs7QUFDMUIsSUFBSUUsaUJBQWlCQyxtQkFBT0EsQ0FBQyx5RkFBd0I7QUFDckQsSUFBSUMsUUFBUVgsYUFBYVUsbUJBQU9BLENBQUMsd0dBQU87QUFDeEMsSUFBSUUsVUFBVUYsbUJBQU9BLENBQUMsdURBQVM7QUFDL0IsSUFBSUcsWUFBWUgsbUJBQU9BLENBQUMsMkRBQVc7QUFDbkMsU0FBU0YsV0FBV00sRUFBRTtJQUNsQixJQUFJQyxXQUFXRCxHQUFHQyxRQUFRLEVBQUVDLFlBQVlGLEdBQUdFLFNBQVM7SUFDcEQsSUFBSUMsVUFBVSxDQUFDLEdBQUdKLFVBQVVLLE9BQU8sRUFBRSxTQUFVQyxLQUFLO1FBQUksT0FBUTtZQUM1REYsU0FBU0UsTUFBTUMsV0FBVyxLQUFLUixRQUFRUyxXQUFXLENBQUNDLE1BQU07UUFDN0Q7SUFBSSxHQUFHTCxPQUFPO0lBQ2QsSUFBSSxDQUFDQSxTQUFTO1FBQ1YsT0FBTztJQUNYO0lBQ0EsT0FBT04sTUFBTVksYUFBYSxDQUFDZCxlQUFlZSxNQUFNLEVBQUU7UUFBRVIsV0FBV0E7SUFBVSxHQUFHRDtBQUNoRjtBQUNBUixrQkFBa0IsR0FBR0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclBvcnRhbC5qcz82YzkxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktCYXJQb3J0YWwgPSB2b2lkIDA7XG52YXIgcmVhY3RfcG9ydGFsXzEgPSByZXF1aXJlKFwiQHJhZGl4LXVpL3JlYWN0LXBvcnRhbFwiKTtcbnZhciBSZWFjdCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbnZhciB1c2VLQmFyXzEgPSByZXF1aXJlKFwiLi91c2VLQmFyXCIpO1xuZnVuY3Rpb24gS0JhclBvcnRhbChfYSkge1xuICAgIHZhciBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuLCBjb250YWluZXIgPSBfYS5jb250YWluZXI7XG4gICAgdmFyIHNob3dpbmcgPSAoMCwgdXNlS0Jhcl8xLnVzZUtCYXIpKGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gKHtcbiAgICAgICAgc2hvd2luZzogc3RhdGUudmlzdWFsU3RhdGUgIT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuaGlkZGVuLFxuICAgIH0pOyB9KS5zaG93aW5nO1xuICAgIGlmICghc2hvd2luZykge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3RfcG9ydGFsXzEuUG9ydGFsLCB7IGNvbnRhaW5lcjogY29udGFpbmVyIH0sIGNoaWxkcmVuKTtcbn1cbmV4cG9ydHMuS0JhclBvcnRhbCA9IEtCYXJQb3J0YWw7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJfX3NldE1vZHVsZURlZmF1bHQiLCJ2IiwidmFsdWUiLCJfX2ltcG9ydFN0YXIiLCJtb2QiLCJfX2VzTW9kdWxlIiwicmVzdWx0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZXhwb3J0cyIsIktCYXJQb3J0YWwiLCJyZWFjdF9wb3J0YWxfMSIsInJlcXVpcmUiLCJSZWFjdCIsInR5cGVzXzEiLCJ1c2VLQmFyXzEiLCJfYSIsImNoaWxkcmVuIiwiY29udGFpbmVyIiwic2hvd2luZyIsInVzZUtCYXIiLCJzdGF0ZSIsInZpc3VhbFN0YXRlIiwiVmlzdWFsU3RhdGUiLCJoaWRkZW4iLCJjcmVhdGVFbGVtZW50IiwiUG9ydGFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarPortal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarPositioner.js":
/*!*************************************************!*\
  !*** ./node_modules/kbar/lib/KBarPositioner.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (void 0) && (void 0).__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarPositioner = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar defaultStyle = {\n    position: \"fixed\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    inset: \"0px\",\n    padding: \"14vh 16px 16px\"\n};\nfunction getStyle(style) {\n    return style ? __assign(__assign({}, defaultStyle), style) : defaultStyle;\n}\nexports.KBarPositioner = React.forwardRef(function(_a, ref) {\n    var style = _a.style, children = _a.children, props = __rest(_a, [\n        \"style\",\n        \"children\"\n    ]);\n    return React.createElement(\"div\", __assign({\n        ref: ref,\n        style: getStyle(style)\n    }, props), children);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclBvc2l0aW9uZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxXQUFXLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsUUFBUSxJQUFLO0lBQ3RDQSxXQUFXQyxPQUFPQyxNQUFNLElBQUksU0FBU0MsQ0FBQztRQUNsQyxJQUFLLElBQUlDLEdBQUdDLElBQUksR0FBR0MsSUFBSUMsVUFBVUMsTUFBTSxFQUFFSCxJQUFJQyxHQUFHRCxJQUFLO1lBQ2pERCxJQUFJRyxTQUFTLENBQUNGLEVBQUU7WUFDaEIsSUFBSyxJQUFJSSxLQUFLTCxFQUFHLElBQUlILE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQ3pETixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO1FBQ25CO1FBQ0EsT0FBT047SUFDWDtJQUNBLE9BQU9ILFNBQVNhLEtBQUssQ0FBQyxJQUFJLEVBQUVOO0FBQ2hDO0FBQ0EsSUFBSU8sa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNYixDQUFBQSxPQUFPYyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQmpCLE9BQU9vQixjQUFjLENBQUNMLEdBQUdHLElBQUk7UUFBRUcsWUFBWTtRQUFNQyxLQUFLO1lBQWEsT0FBT04sQ0FBQyxDQUFDQyxFQUFFO1FBQUU7SUFBRTtBQUN0RixJQUFNLFNBQVNGLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlNLHFCQUFxQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGtCQUFrQixJQUFNdkIsQ0FBQUEsT0FBT2MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRVMsQ0FBQztJQUN6RnhCLE9BQU9vQixjQUFjLENBQUNMLEdBQUcsV0FBVztRQUFFTSxZQUFZO1FBQU1JLE9BQU9EO0lBQUU7QUFDckUsSUFBSyxTQUFTVCxDQUFDLEVBQUVTLENBQUM7SUFDZFQsQ0FBQyxDQUFDLFVBQVUsR0FBR1M7QUFDbkI7QUFDQSxJQUFJRSxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVVDLEdBQUc7SUFDM0QsSUFBSUEsT0FBT0EsSUFBSUMsVUFBVSxFQUFFLE9BQU9EO0lBQ2xDLElBQUlFLFNBQVMsQ0FBQztJQUNkLElBQUlGLE9BQU8sTUFBTTtRQUFBLElBQUssSUFBSVYsS0FBS1UsSUFBSyxJQUFJVixNQUFNLGFBQWFqQixPQUFPUyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDZ0IsS0FBS1YsSUFBSUosZ0JBQWdCZ0IsUUFBUUYsS0FBS1Y7SUFBRTtJQUN4SU0sbUJBQW1CTSxRQUFRRjtJQUMzQixPQUFPRTtBQUNYO0FBQ0EsSUFBSUMsU0FBUyxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLE1BQU0sSUFBSyxTQUFVM0IsQ0FBQyxFQUFFNEIsQ0FBQztJQUNoRCxJQUFJN0IsSUFBSSxDQUFDO0lBQ1QsSUFBSyxJQUFJTSxLQUFLTCxFQUFHLElBQUlILE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLE1BQU11QixFQUFFQyxPQUFPLENBQUN4QixLQUFLLEdBQzlFTixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO0lBQ2YsSUFBSUwsS0FBSyxRQUFRLE9BQU9ILE9BQU9pQyxxQkFBcUIsS0FBSyxZQUNyRCxJQUFLLElBQUk3QixJQUFJLEdBQUdJLElBQUlSLE9BQU9pQyxxQkFBcUIsQ0FBQzlCLElBQUlDLElBQUlJLEVBQUVELE1BQU0sRUFBRUgsSUFBSztRQUNwRSxJQUFJMkIsRUFBRUMsT0FBTyxDQUFDeEIsQ0FBQyxDQUFDSixFQUFFLElBQUksS0FBS0osT0FBT1MsU0FBUyxDQUFDeUIsb0JBQW9CLENBQUN2QixJQUFJLENBQUNSLEdBQUdLLENBQUMsQ0FBQ0osRUFBRSxHQUN6RUYsQ0FBQyxDQUFDTSxDQUFDLENBQUNKLEVBQUUsQ0FBQyxHQUFHRCxDQUFDLENBQUNLLENBQUMsQ0FBQ0osRUFBRSxDQUFDO0lBQ3pCO0lBQ0osT0FBT0Y7QUFDWDtBQUNBRiw4Q0FBNkM7SUFBRXlCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RVLHNCQUFzQixHQUFHLEtBQUs7QUFDOUIsSUFBSUUsUUFBUVgsYUFBYVksbUJBQU9BLENBQUMsd0dBQU87QUFDeEMsSUFBSUMsZUFBZTtJQUNmQyxVQUFVO0lBQ1ZDLFNBQVM7SUFDVEMsWUFBWTtJQUNaQyxnQkFBZ0I7SUFDaEJDLE9BQU87SUFDUEMsT0FBTztJQUNQQyxTQUFTO0FBQ2I7QUFDQSxTQUFTQyxTQUFTQyxLQUFLO0lBQ25CLE9BQU9BLFFBQVFqRCxTQUFTQSxTQUFTLENBQUMsR0FBR3dDLGVBQWVTLFNBQVNUO0FBQ2pFO0FBQ0FKLHNCQUFzQixHQUFHRSxNQUFNWSxVQUFVLENBQUMsU0FBVUMsRUFBRSxFQUFFQyxHQUFHO0lBQ3ZELElBQUlILFFBQVFFLEdBQUdGLEtBQUssRUFBRUksV0FBV0YsR0FBR0UsUUFBUSxFQUFFQyxRQUFRdkIsT0FBT29CLElBQUk7UUFBQztRQUFTO0tBQVc7SUFDdEYsT0FBUWIsTUFBTWlCLGFBQWEsQ0FBQyxPQUFPdkQsU0FBUztRQUFFb0QsS0FBS0E7UUFBS0gsT0FBT0QsU0FBU0M7SUFBTyxHQUFHSyxRQUFRRDtBQUM5RiIsInNvdXJjZXMiOlsid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi9LQmFyUG9zaXRpb25lci5qcz9kOTkwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xudmFyIF9fcmVzdCA9ICh0aGlzICYmIHRoaXMuX19yZXN0KSB8fCBmdW5jdGlvbiAocywgZSkge1xuICAgIHZhciB0ID0ge307XG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXG4gICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LQmFyUG9zaXRpb25lciA9IHZvaWQgMDtcbnZhciBSZWFjdCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIGRlZmF1bHRTdHlsZSA9IHtcbiAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICBpbnNldDogXCIwcHhcIixcbiAgICBwYWRkaW5nOiBcIjE0dmggMTZweCAxNnB4XCIsXG59O1xuZnVuY3Rpb24gZ2V0U3R5bGUoc3R5bGUpIHtcbiAgICByZXR1cm4gc3R5bGUgPyBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgZGVmYXVsdFN0eWxlKSwgc3R5bGUpIDogZGVmYXVsdFN0eWxlO1xufVxuZXhwb3J0cy5LQmFyUG9zaXRpb25lciA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gKF9hLCByZWYpIHtcbiAgICB2YXIgc3R5bGUgPSBfYS5zdHlsZSwgY2hpbGRyZW4gPSBfYS5jaGlsZHJlbiwgcHJvcHMgPSBfX3Jlc3QoX2EsIFtcInN0eWxlXCIsIFwiY2hpbGRyZW5cIl0pO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBfX2Fzc2lnbih7IHJlZjogcmVmLCBzdHlsZTogZ2V0U3R5bGUoc3R5bGUpIH0sIHByb3BzKSwgY2hpbGRyZW4pKTtcbn0pO1xuIl0sIm5hbWVzIjpbIl9fYXNzaWduIiwiT2JqZWN0IiwiYXNzaWduIiwidCIsInMiLCJpIiwibiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsIl9fY3JlYXRlQmluZGluZyIsImNyZWF0ZSIsIm8iLCJtIiwiayIsImsyIiwidW5kZWZpbmVkIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX19zZXRNb2R1bGVEZWZhdWx0IiwidiIsInZhbHVlIiwiX19pbXBvcnRTdGFyIiwibW9kIiwiX19lc01vZHVsZSIsInJlc3VsdCIsIl9fcmVzdCIsImUiLCJpbmRleE9mIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJleHBvcnRzIiwiS0JhclBvc2l0aW9uZXIiLCJSZWFjdCIsInJlcXVpcmUiLCJkZWZhdWx0U3R5bGUiLCJwb3NpdGlvbiIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJ3aWR0aCIsImluc2V0IiwicGFkZGluZyIsImdldFN0eWxlIiwic3R5bGUiLCJmb3J3YXJkUmVmIiwiX2EiLCJyZWYiLCJjaGlsZHJlbiIsInByb3BzIiwiY3JlYXRlRWxlbWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarPositioner.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarResults.js":
/*!**********************************************!*\
  !*** ./node_modules/kbar/lib/KBarResults.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarResults = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar react_virtual_1 = __webpack_require__(/*! react-virtual */ \"(ssr)/./node_modules/react-virtual/dist/react-virtual.mjs\");\nvar KBarSearch_1 = __webpack_require__(/*! ./KBarSearch */ \"(ssr)/./node_modules/kbar/lib/KBarSearch.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar START_INDEX = 0;\nvar KBarResults = function(props) {\n    var activeRef = React.useRef(null);\n    var parentRef = React.useRef(null);\n    // store a ref to all items so we do not have to pass\n    // them as a dependency when setting up event listeners.\n    var itemsRef = React.useRef(props.items);\n    itemsRef.current = props.items;\n    var rowVirtualizer = (0, react_virtual_1.useVirtual)({\n        size: itemsRef.current.length,\n        parentRef: parentRef\n    });\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            search: state.searchQuery,\n            currentRootActionId: state.currentRootActionId,\n            activeIndex: state.activeIndex\n        };\n    }), query = _a.query, search = _a.search, currentRootActionId = _a.currentRootActionId, activeIndex = _a.activeIndex, options = _a.options;\n    React.useEffect(function() {\n        var handler = function(event) {\n            var _a;\n            if (event.isComposing) {\n                return;\n            }\n            if (event.key === \"ArrowUp\" || event.ctrlKey && event.key === \"p\") {\n                event.preventDefault();\n                event.stopPropagation();\n                query.setActiveIndex(function(index) {\n                    var nextIndex = index > START_INDEX ? index - 1 : index;\n                    // avoid setting active index on a group\n                    if (typeof itemsRef.current[nextIndex] === \"string\") {\n                        if (nextIndex === 0) return index;\n                        nextIndex -= 1;\n                    }\n                    return nextIndex;\n                });\n            } else if (event.key === \"ArrowDown\" || event.ctrlKey && event.key === \"n\") {\n                event.preventDefault();\n                event.stopPropagation();\n                query.setActiveIndex(function(index) {\n                    var nextIndex = index < itemsRef.current.length - 1 ? index + 1 : index;\n                    // avoid setting active index on a group\n                    if (typeof itemsRef.current[nextIndex] === \"string\") {\n                        if (nextIndex === itemsRef.current.length - 1) return index;\n                        nextIndex += 1;\n                    }\n                    return nextIndex;\n                });\n            } else if (event.key === \"Enter\") {\n                event.preventDefault();\n                event.stopPropagation();\n                // storing the active dom element in a ref prevents us from\n                // having to calculate the current action to perform based\n                // on the `activeIndex`, which we would have needed to add\n                // as part of the dependencies array.\n                (_a = activeRef.current) === null || _a === void 0 ? void 0 : _a.click();\n            }\n        };\n        window.addEventListener(\"keydown\", handler, {\n            capture: true\n        });\n        return function() {\n            return window.removeEventListener(\"keydown\", handler, {\n                capture: true\n            });\n        };\n    }, [\n        query\n    ]);\n    // destructuring here to prevent linter warning to pass\n    // entire rowVirtualizer in the dependencies array.\n    var scrollToIndex = rowVirtualizer.scrollToIndex;\n    React.useEffect(function() {\n        scrollToIndex(activeIndex, {\n            // ensure that if the first item in the list is a group\n            // name and we are focused on the second item, to not\n            // scroll past that group, hiding it.\n            align: activeIndex <= 1 ? \"end\" : \"auto\"\n        });\n    }, [\n        activeIndex,\n        scrollToIndex\n    ]);\n    React.useEffect(function() {\n        // TODO(tim): fix scenario where async actions load in\n        // and active index is reset to the first item. i.e. when\n        // users register actions and bust the `useRegisterActions`\n        // cache, we won't want to reset their active index as they\n        // are navigating the list.\n        query.setActiveIndex(// avoid setting active index on a group\n        typeof props.items[START_INDEX] === \"string\" ? START_INDEX + 1 : START_INDEX);\n    }, [\n        search,\n        currentRootActionId,\n        props.items,\n        query\n    ]);\n    var execute = React.useCallback(function(item) {\n        var _a, _b;\n        if (typeof item === \"string\") return;\n        if (item.command) {\n            item.command.perform(item);\n            query.toggle();\n        } else {\n            query.setSearch(\"\");\n            query.setCurrentRootAction(item.id);\n        }\n        (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onSelectAction) === null || _b === void 0 ? void 0 : _b.call(_a, item);\n    }, [\n        query,\n        options\n    ]);\n    var pointerMoved = (0, utils_1.usePointerMovedSinceMount)();\n    return React.createElement(\"div\", {\n        ref: parentRef,\n        style: {\n            maxHeight: props.maxHeight || 400,\n            position: \"relative\",\n            overflow: \"auto\"\n        }\n    }, React.createElement(\"div\", {\n        role: \"listbox\",\n        id: KBarSearch_1.KBAR_LISTBOX,\n        style: {\n            height: rowVirtualizer.totalSize + \"px\",\n            width: \"100%\"\n        }\n    }, rowVirtualizer.virtualItems.map(function(virtualRow) {\n        var item = itemsRef.current[virtualRow.index];\n        var handlers = typeof item !== \"string\" && {\n            onPointerMove: function() {\n                return pointerMoved && activeIndex !== virtualRow.index && query.setActiveIndex(virtualRow.index);\n            },\n            onPointerDown: function() {\n                return query.setActiveIndex(virtualRow.index);\n            },\n            onClick: function() {\n                return execute(item);\n            }\n        };\n        var active = virtualRow.index === activeIndex;\n        return React.createElement(\"div\", __assign({\n            ref: active ? activeRef : null,\n            id: (0, KBarSearch_1.getListboxItemId)(virtualRow.index),\n            role: \"option\",\n            \"aria-selected\": active,\n            key: virtualRow.index,\n            style: {\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                transform: \"translateY(\" + virtualRow.start + \"px)\"\n            }\n        }, handlers), React.cloneElement(props.onRender({\n            item: item,\n            active: active\n        }), {\n            ref: virtualRow.measureRef\n        }));\n    })));\n};\nexports.KBarResults = KBarResults;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclJlc3VsdHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxXQUFXLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsUUFBUSxJQUFLO0lBQ3RDQSxXQUFXQyxPQUFPQyxNQUFNLElBQUksU0FBU0MsQ0FBQztRQUNsQyxJQUFLLElBQUlDLEdBQUdDLElBQUksR0FBR0MsSUFBSUMsVUFBVUMsTUFBTSxFQUFFSCxJQUFJQyxHQUFHRCxJQUFLO1lBQ2pERCxJQUFJRyxTQUFTLENBQUNGLEVBQUU7WUFDaEIsSUFBSyxJQUFJSSxLQUFLTCxFQUFHLElBQUlILE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQ3pETixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO1FBQ25CO1FBQ0EsT0FBT047SUFDWDtJQUNBLE9BQU9ILFNBQVNhLEtBQUssQ0FBQyxJQUFJLEVBQUVOO0FBQ2hDO0FBQ0EsSUFBSU8sa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNYixDQUFBQSxPQUFPYyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQmpCLE9BQU9vQixjQUFjLENBQUNMLEdBQUdHLElBQUk7UUFBRUcsWUFBWTtRQUFNQyxLQUFLO1lBQWEsT0FBT04sQ0FBQyxDQUFDQyxFQUFFO1FBQUU7SUFBRTtBQUN0RixJQUFNLFNBQVNGLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlNLHFCQUFxQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGtCQUFrQixJQUFNdkIsQ0FBQUEsT0FBT2MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRVMsQ0FBQztJQUN6RnhCLE9BQU9vQixjQUFjLENBQUNMLEdBQUcsV0FBVztRQUFFTSxZQUFZO1FBQU1JLE9BQU9EO0lBQUU7QUFDckUsSUFBSyxTQUFTVCxDQUFDLEVBQUVTLENBQUM7SUFDZFQsQ0FBQyxDQUFDLFVBQVUsR0FBR1M7QUFDbkI7QUFDQSxJQUFJRSxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVVDLEdBQUc7SUFDM0QsSUFBSUEsT0FBT0EsSUFBSUMsVUFBVSxFQUFFLE9BQU9EO0lBQ2xDLElBQUlFLFNBQVMsQ0FBQztJQUNkLElBQUlGLE9BQU8sTUFBTTtRQUFBLElBQUssSUFBSVYsS0FBS1UsSUFBSyxJQUFJVixNQUFNLGFBQWFqQixPQUFPUyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDZ0IsS0FBS1YsSUFBSUosZ0JBQWdCZ0IsUUFBUUYsS0FBS1Y7SUFBRTtJQUN4SU0sbUJBQW1CTSxRQUFRRjtJQUMzQixPQUFPRTtBQUNYO0FBQ0E3Qiw4Q0FBNkM7SUFBRXlCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RLLG1CQUFtQixHQUFHLEtBQUs7QUFDM0IsSUFBSUUsUUFBUU4sYUFBYU8sbUJBQU9BLENBQUMsd0dBQU87QUFDeEMsSUFBSUMsa0JBQWtCRCxtQkFBT0EsQ0FBQyxnRkFBZTtBQUM3QyxJQUFJRSxlQUFlRixtQkFBT0EsQ0FBQyxpRUFBYztBQUN6QyxJQUFJRyxZQUFZSCxtQkFBT0EsQ0FBQywyREFBVztBQUNuQyxJQUFJSSxVQUFVSixtQkFBT0EsQ0FBQyx1REFBUztBQUMvQixJQUFJSyxjQUFjO0FBQ2xCLElBQUlQLGNBQWMsU0FBVVEsS0FBSztJQUM3QixJQUFJQyxZQUFZUixNQUFNUyxNQUFNLENBQUM7SUFDN0IsSUFBSUMsWUFBWVYsTUFBTVMsTUFBTSxDQUFDO0lBQzdCLHFEQUFxRDtJQUNyRCx3REFBd0Q7SUFDeEQsSUFBSUUsV0FBV1gsTUFBTVMsTUFBTSxDQUFDRixNQUFNSyxLQUFLO0lBQ3ZDRCxTQUFTRSxPQUFPLEdBQUdOLE1BQU1LLEtBQUs7SUFDOUIsSUFBSUUsaUJBQWlCLENBQUMsR0FBR1osZ0JBQWdCYSxVQUFVLEVBQUU7UUFDakRDLE1BQU1MLFNBQVNFLE9BQU8sQ0FBQ3RDLE1BQU07UUFDN0JtQyxXQUFXQTtJQUNmO0lBQ0EsSUFBSU8sS0FBSyxDQUFDLEdBQUdiLFVBQVVjLE9BQU8sRUFBRSxTQUFVQyxLQUFLO1FBQUksT0FBUTtZQUN2REMsUUFBUUQsTUFBTUUsV0FBVztZQUN6QkMscUJBQXFCSCxNQUFNRyxtQkFBbUI7WUFDOUNDLGFBQWFKLE1BQU1JLFdBQVc7UUFDbEM7SUFBSSxJQUFJQyxRQUFRUCxHQUFHTyxLQUFLLEVBQUVKLFNBQVNILEdBQUdHLE1BQU0sRUFBRUUsc0JBQXNCTCxHQUFHSyxtQkFBbUIsRUFBRUMsY0FBY04sR0FBR00sV0FBVyxFQUFFRSxVQUFVUixHQUFHUSxPQUFPO0lBQzlJekIsTUFBTTBCLFNBQVMsQ0FBQztRQUNaLElBQUlDLFVBQVUsU0FBVUMsS0FBSztZQUN6QixJQUFJWDtZQUNKLElBQUlXLE1BQU1DLFdBQVcsRUFBRTtnQkFDbkI7WUFDSjtZQUNBLElBQUlELE1BQU1FLEdBQUcsS0FBSyxhQUFjRixNQUFNRyxPQUFPLElBQUlILE1BQU1FLEdBQUcsS0FBSyxLQUFNO2dCQUNqRUYsTUFBTUksY0FBYztnQkFDcEJKLE1BQU1LLGVBQWU7Z0JBQ3JCVCxNQUFNVSxjQUFjLENBQUMsU0FBVUMsS0FBSztvQkFDaEMsSUFBSUMsWUFBWUQsUUFBUTdCLGNBQWM2QixRQUFRLElBQUlBO29CQUNsRCx3Q0FBd0M7b0JBQ3hDLElBQUksT0FBT3hCLFNBQVNFLE9BQU8sQ0FBQ3VCLFVBQVUsS0FBSyxVQUFVO3dCQUNqRCxJQUFJQSxjQUFjLEdBQ2QsT0FBT0Q7d0JBQ1hDLGFBQWE7b0JBQ2pCO29CQUNBLE9BQU9BO2dCQUNYO1lBQ0osT0FDSyxJQUFJUixNQUFNRSxHQUFHLEtBQUssZUFDbEJGLE1BQU1HLE9BQU8sSUFBSUgsTUFBTUUsR0FBRyxLQUFLLEtBQU07Z0JBQ3RDRixNQUFNSSxjQUFjO2dCQUNwQkosTUFBTUssZUFBZTtnQkFDckJULE1BQU1VLGNBQWMsQ0FBQyxTQUFVQyxLQUFLO29CQUNoQyxJQUFJQyxZQUFZRCxRQUFReEIsU0FBU0UsT0FBTyxDQUFDdEMsTUFBTSxHQUFHLElBQUk0RCxRQUFRLElBQUlBO29CQUNsRSx3Q0FBd0M7b0JBQ3hDLElBQUksT0FBT3hCLFNBQVNFLE9BQU8sQ0FBQ3VCLFVBQVUsS0FBSyxVQUFVO3dCQUNqRCxJQUFJQSxjQUFjekIsU0FBU0UsT0FBTyxDQUFDdEMsTUFBTSxHQUFHLEdBQ3hDLE9BQU80RDt3QkFDWEMsYUFBYTtvQkFDakI7b0JBQ0EsT0FBT0E7Z0JBQ1g7WUFDSixPQUNLLElBQUlSLE1BQU1FLEdBQUcsS0FBSyxTQUFTO2dCQUM1QkYsTUFBTUksY0FBYztnQkFDcEJKLE1BQU1LLGVBQWU7Z0JBQ3JCLDJEQUEyRDtnQkFDM0QsMERBQTBEO2dCQUMxRCwwREFBMEQ7Z0JBQzFELHFDQUFxQztnQkFDcENoQixDQUFBQSxLQUFLVCxVQUFVSyxPQUFPLE1BQU0sUUFBUUksT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHb0IsS0FBSztZQUMxRTtRQUNKO1FBQ0FDLE9BQU9DLGdCQUFnQixDQUFDLFdBQVdaLFNBQVM7WUFBRWEsU0FBUztRQUFLO1FBQzVELE9BQU87WUFBYyxPQUFPRixPQUFPRyxtQkFBbUIsQ0FBQyxXQUFXZCxTQUFTO2dCQUFFYSxTQUFTO1lBQUs7UUFBSTtJQUNuRyxHQUFHO1FBQUNoQjtLQUFNO0lBQ1YsdURBQXVEO0lBQ3ZELG1EQUFtRDtJQUNuRCxJQUFJa0IsZ0JBQWdCNUIsZUFBZTRCLGFBQWE7SUFDaEQxQyxNQUFNMEIsU0FBUyxDQUFDO1FBQ1pnQixjQUFjbkIsYUFBYTtZQUN2Qix1REFBdUQ7WUFDdkQscURBQXFEO1lBQ3JELHFDQUFxQztZQUNyQ29CLE9BQU9wQixlQUFlLElBQUksUUFBUTtRQUN0QztJQUNKLEdBQUc7UUFBQ0E7UUFBYW1CO0tBQWM7SUFDL0IxQyxNQUFNMEIsU0FBUyxDQUFDO1FBQ1osc0RBQXNEO1FBQ3RELHlEQUF5RDtRQUN6RCwyREFBMkQ7UUFDM0QsMkRBQTJEO1FBQzNELDJCQUEyQjtRQUMzQkYsTUFBTVUsY0FBYyxDQUNwQix3Q0FBd0M7UUFDeEMsT0FBTzNCLE1BQU1LLEtBQUssQ0FBQ04sWUFBWSxLQUFLLFdBQzlCQSxjQUFjLElBQ2RBO0lBQ1YsR0FBRztRQUFDYztRQUFRRTtRQUFxQmYsTUFBTUssS0FBSztRQUFFWTtLQUFNO0lBQ3BELElBQUlvQixVQUFVNUMsTUFBTTZDLFdBQVcsQ0FBQyxTQUFVQyxJQUFJO1FBQzFDLElBQUk3QixJQUFJOEI7UUFDUixJQUFJLE9BQU9ELFNBQVMsVUFDaEI7UUFDSixJQUFJQSxLQUFLRSxPQUFPLEVBQUU7WUFDZEYsS0FBS0UsT0FBTyxDQUFDQyxPQUFPLENBQUNIO1lBQ3JCdEIsTUFBTTBCLE1BQU07UUFDaEIsT0FDSztZQUNEMUIsTUFBTTJCLFNBQVMsQ0FBQztZQUNoQjNCLE1BQU00QixvQkFBb0IsQ0FBQ04sS0FBS08sRUFBRTtRQUN0QztRQUNDTixDQUFBQSxLQUFLLENBQUM5QixLQUFLUSxRQUFRNkIsU0FBUyxNQUFNLFFBQVFyQyxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdzQyxjQUFjLE1BQU0sUUFBUVIsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHcEUsSUFBSSxDQUFDc0MsSUFBSTZCO0lBQzVJLEdBQUc7UUFBQ3RCO1FBQU9DO0tBQVE7SUFDbkIsSUFBSStCLGVBQWUsQ0FBQyxHQUFHbkQsUUFBUW9ELHlCQUF5QjtJQUN4RCxPQUFRekQsTUFBTTBELGFBQWEsQ0FBQyxPQUFPO1FBQUVDLEtBQUtqRDtRQUFXa0QsT0FBTztZQUNwREMsV0FBV3RELE1BQU1zRCxTQUFTLElBQUk7WUFDOUJDLFVBQVU7WUFDVkMsVUFBVTtRQUNkO0lBQUUsR0FDRi9ELE1BQU0wRCxhQUFhLENBQUMsT0FBTztRQUFFTSxNQUFNO1FBQVdYLElBQUlsRCxhQUFhOEQsWUFBWTtRQUFFTCxPQUFPO1lBQzVFTSxRQUFRcEQsZUFBZXFELFNBQVMsR0FBRztZQUNuQ0MsT0FBTztRQUNYO0lBQUUsR0FBR3RELGVBQWV1RCxZQUFZLENBQUNDLEdBQUcsQ0FBQyxTQUFVQyxVQUFVO1FBQ3pELElBQUl6QixPQUFPbkMsU0FBU0UsT0FBTyxDQUFDMEQsV0FBV3BDLEtBQUssQ0FBQztRQUM3QyxJQUFJcUMsV0FBVyxPQUFPMUIsU0FBUyxZQUFZO1lBQ3ZDMkIsZUFBZTtnQkFDWCxPQUFPakIsZ0JBQ0hqQyxnQkFBZ0JnRCxXQUFXcEMsS0FBSyxJQUNoQ1gsTUFBTVUsY0FBYyxDQUFDcUMsV0FBV3BDLEtBQUs7WUFDN0M7WUFDQXVDLGVBQWU7Z0JBQWMsT0FBT2xELE1BQU1VLGNBQWMsQ0FBQ3FDLFdBQVdwQyxLQUFLO1lBQUc7WUFDNUV3QyxTQUFTO2dCQUFjLE9BQU8vQixRQUFRRTtZQUFPO1FBQ2pEO1FBQ0EsSUFBSThCLFNBQVNMLFdBQVdwQyxLQUFLLEtBQUtaO1FBQ2xDLE9BQVF2QixNQUFNMEQsYUFBYSxDQUFDLE9BQU8zRixTQUFTO1lBQUU0RixLQUFLaUIsU0FBU3BFLFlBQVk7WUFBTTZDLElBQUksQ0FBQyxHQUFHbEQsYUFBYTBFLGdCQUFnQixFQUFFTixXQUFXcEMsS0FBSztZQUFHNkIsTUFBTTtZQUFVLGlCQUFpQlk7WUFBUTlDLEtBQUt5QyxXQUFXcEMsS0FBSztZQUFFeUIsT0FBTztnQkFDdk1FLFVBQVU7Z0JBQ1ZnQixLQUFLO2dCQUNMQyxNQUFNO2dCQUNOWCxPQUFPO2dCQUNQWSxXQUFXLGdCQUFnQlQsV0FBV1UsS0FBSyxHQUFHO1lBQ2xEO1FBQUUsR0FBR1QsV0FBV3hFLE1BQU1rRixZQUFZLENBQUMzRSxNQUFNNEUsUUFBUSxDQUFDO1lBQ2xEckMsTUFBTUE7WUFDTjhCLFFBQVFBO1FBQ1osSUFBSTtZQUNBakIsS0FBS1ksV0FBV2EsVUFBVTtRQUM5QjtJQUNKO0FBQ1I7QUFDQXRGLG1CQUFtQixHQUFHQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi9LQmFyUmVzdWx0cy5qcz8wYmViIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LQmFyUmVzdWx0cyA9IHZvaWQgMDtcbnZhciBSZWFjdCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIHJlYWN0X3ZpcnR1YWxfMSA9IHJlcXVpcmUoXCJyZWFjdC12aXJ0dWFsXCIpO1xudmFyIEtCYXJTZWFyY2hfMSA9IHJlcXVpcmUoXCIuL0tCYXJTZWFyY2hcIik7XG52YXIgdXNlS0Jhcl8xID0gcmVxdWlyZShcIi4vdXNlS0JhclwiKTtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG52YXIgU1RBUlRfSU5ERVggPSAwO1xudmFyIEtCYXJSZXN1bHRzID0gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgdmFyIGFjdGl2ZVJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgICB2YXIgcGFyZW50UmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICAgIC8vIHN0b3JlIGEgcmVmIHRvIGFsbCBpdGVtcyBzbyB3ZSBkbyBub3QgaGF2ZSB0byBwYXNzXG4gICAgLy8gdGhlbSBhcyBhIGRlcGVuZGVuY3kgd2hlbiBzZXR0aW5nIHVwIGV2ZW50IGxpc3RlbmVycy5cbiAgICB2YXIgaXRlbXNSZWYgPSBSZWFjdC51c2VSZWYocHJvcHMuaXRlbXMpO1xuICAgIGl0ZW1zUmVmLmN1cnJlbnQgPSBwcm9wcy5pdGVtcztcbiAgICB2YXIgcm93VmlydHVhbGl6ZXIgPSAoMCwgcmVhY3RfdmlydHVhbF8xLnVzZVZpcnR1YWwpKHtcbiAgICAgICAgc2l6ZTogaXRlbXNSZWYuY3VycmVudC5sZW5ndGgsXG4gICAgICAgIHBhcmVudFJlZjogcGFyZW50UmVmLFxuICAgIH0pO1xuICAgIHZhciBfYSA9ICgwLCB1c2VLQmFyXzEudXNlS0JhcikoZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiAoe1xuICAgICAgICBzZWFyY2g6IHN0YXRlLnNlYXJjaFF1ZXJ5LFxuICAgICAgICBjdXJyZW50Um9vdEFjdGlvbklkOiBzdGF0ZS5jdXJyZW50Um9vdEFjdGlvbklkLFxuICAgICAgICBhY3RpdmVJbmRleDogc3RhdGUuYWN0aXZlSW5kZXgsXG4gICAgfSk7IH0pLCBxdWVyeSA9IF9hLnF1ZXJ5LCBzZWFyY2ggPSBfYS5zZWFyY2gsIGN1cnJlbnRSb290QWN0aW9uSWQgPSBfYS5jdXJyZW50Um9vdEFjdGlvbklkLCBhY3RpdmVJbmRleCA9IF9hLmFjdGl2ZUluZGV4LCBvcHRpb25zID0gX2Eub3B0aW9ucztcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgaGFuZGxlciA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgaWYgKGV2ZW50LmlzQ29tcG9zaW5nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gXCJBcnJvd1VwXCIgfHwgKGV2ZW50LmN0cmxLZXkgJiYgZXZlbnQua2V5ID09PSBcInBcIikpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIHF1ZXJ5LnNldEFjdGl2ZUluZGV4KGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmV4dEluZGV4ID0gaW5kZXggPiBTVEFSVF9JTkRFWCA/IGluZGV4IC0gMSA6IGluZGV4O1xuICAgICAgICAgICAgICAgICAgICAvLyBhdm9pZCBzZXR0aW5nIGFjdGl2ZSBpbmRleCBvbiBhIGdyb3VwXG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaXRlbXNSZWYuY3VycmVudFtuZXh0SW5kZXhdID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV4dEluZGV4ID09PSAwKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpbmRleDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRJbmRleCAtPSAxO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXh0SW5kZXg7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChldmVudC5rZXkgPT09IFwiQXJyb3dEb3duXCIgfHxcbiAgICAgICAgICAgICAgICAoZXZlbnQuY3RybEtleSAmJiBldmVudC5rZXkgPT09IFwiblwiKSkge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgcXVlcnkuc2V0QWN0aXZlSW5kZXgoZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXh0SW5kZXggPSBpbmRleCA8IGl0ZW1zUmVmLmN1cnJlbnQubGVuZ3RoIC0gMSA/IGluZGV4ICsgMSA6IGluZGV4O1xuICAgICAgICAgICAgICAgICAgICAvLyBhdm9pZCBzZXR0aW5nIGFjdGl2ZSBpbmRleCBvbiBhIGdyb3VwXG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaXRlbXNSZWYuY3VycmVudFtuZXh0SW5kZXhdID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV4dEluZGV4ID09PSBpdGVtc1JlZi5jdXJyZW50Lmxlbmd0aCAtIDEpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGluZGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dEluZGV4ICs9IDE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5leHRJbmRleDtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGV2ZW50LmtleSA9PT0gXCJFbnRlclwiKSB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAvLyBzdG9yaW5nIHRoZSBhY3RpdmUgZG9tIGVsZW1lbnQgaW4gYSByZWYgcHJldmVudHMgdXMgZnJvbVxuICAgICAgICAgICAgICAgIC8vIGhhdmluZyB0byBjYWxjdWxhdGUgdGhlIGN1cnJlbnQgYWN0aW9uIHRvIHBlcmZvcm0gYmFzZWRcbiAgICAgICAgICAgICAgICAvLyBvbiB0aGUgYGFjdGl2ZUluZGV4YCwgd2hpY2ggd2Ugd291bGQgaGF2ZSBuZWVkZWQgdG8gYWRkXG4gICAgICAgICAgICAgICAgLy8gYXMgcGFydCBvZiB0aGUgZGVwZW5kZW5jaWVzIGFycmF5LlxuICAgICAgICAgICAgICAgIChfYSA9IGFjdGl2ZVJlZi5jdXJyZW50KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2xpY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZXIsIHsgY2FwdHVyZTogdHJ1ZSB9KTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBoYW5kbGVyLCB7IGNhcHR1cmU6IHRydWUgfSk7IH07XG4gICAgfSwgW3F1ZXJ5XSk7XG4gICAgLy8gZGVzdHJ1Y3R1cmluZyBoZXJlIHRvIHByZXZlbnQgbGludGVyIHdhcm5pbmcgdG8gcGFzc1xuICAgIC8vIGVudGlyZSByb3dWaXJ0dWFsaXplciBpbiB0aGUgZGVwZW5kZW5jaWVzIGFycmF5LlxuICAgIHZhciBzY3JvbGxUb0luZGV4ID0gcm93VmlydHVhbGl6ZXIuc2Nyb2xsVG9JbmRleDtcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBzY3JvbGxUb0luZGV4KGFjdGl2ZUluZGV4LCB7XG4gICAgICAgICAgICAvLyBlbnN1cmUgdGhhdCBpZiB0aGUgZmlyc3QgaXRlbSBpbiB0aGUgbGlzdCBpcyBhIGdyb3VwXG4gICAgICAgICAgICAvLyBuYW1lIGFuZCB3ZSBhcmUgZm9jdXNlZCBvbiB0aGUgc2Vjb25kIGl0ZW0sIHRvIG5vdFxuICAgICAgICAgICAgLy8gc2Nyb2xsIHBhc3QgdGhhdCBncm91cCwgaGlkaW5nIGl0LlxuICAgICAgICAgICAgYWxpZ246IGFjdGl2ZUluZGV4IDw9IDEgPyBcImVuZFwiIDogXCJhdXRvXCIsXG4gICAgICAgIH0pO1xuICAgIH0sIFthY3RpdmVJbmRleCwgc2Nyb2xsVG9JbmRleF0pO1xuICAgIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIFRPRE8odGltKTogZml4IHNjZW5hcmlvIHdoZXJlIGFzeW5jIGFjdGlvbnMgbG9hZCBpblxuICAgICAgICAvLyBhbmQgYWN0aXZlIGluZGV4IGlzIHJlc2V0IHRvIHRoZSBmaXJzdCBpdGVtLiBpLmUuIHdoZW5cbiAgICAgICAgLy8gdXNlcnMgcmVnaXN0ZXIgYWN0aW9ucyBhbmQgYnVzdCB0aGUgYHVzZVJlZ2lzdGVyQWN0aW9uc2BcbiAgICAgICAgLy8gY2FjaGUsIHdlIHdvbid0IHdhbnQgdG8gcmVzZXQgdGhlaXIgYWN0aXZlIGluZGV4IGFzIHRoZXlcbiAgICAgICAgLy8gYXJlIG5hdmlnYXRpbmcgdGhlIGxpc3QuXG4gICAgICAgIHF1ZXJ5LnNldEFjdGl2ZUluZGV4KFxuICAgICAgICAvLyBhdm9pZCBzZXR0aW5nIGFjdGl2ZSBpbmRleCBvbiBhIGdyb3VwXG4gICAgICAgIHR5cGVvZiBwcm9wcy5pdGVtc1tTVEFSVF9JTkRFWF0gPT09IFwic3RyaW5nXCJcbiAgICAgICAgICAgID8gU1RBUlRfSU5ERVggKyAxXG4gICAgICAgICAgICA6IFNUQVJUX0lOREVYKTtcbiAgICB9LCBbc2VhcmNoLCBjdXJyZW50Um9vdEFjdGlvbklkLCBwcm9wcy5pdGVtcywgcXVlcnldKTtcbiAgICB2YXIgZXhlY3V0ZSA9IFJlYWN0LnVzZUNhbGxiYWNrKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbSA9PT0gXCJzdHJpbmdcIilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKGl0ZW0uY29tbWFuZCkge1xuICAgICAgICAgICAgaXRlbS5jb21tYW5kLnBlcmZvcm0oaXRlbSk7XG4gICAgICAgICAgICBxdWVyeS50b2dnbGUoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHF1ZXJ5LnNldFNlYXJjaChcIlwiKTtcbiAgICAgICAgICAgIHF1ZXJ5LnNldEN1cnJlbnRSb290QWN0aW9uKGl0ZW0uaWQpO1xuICAgICAgICB9XG4gICAgICAgIChfYiA9IChfYSA9IG9wdGlvbnMuY2FsbGJhY2tzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Eub25TZWxlY3RBY3Rpb24pID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCBpdGVtKTtcbiAgICB9LCBbcXVlcnksIG9wdGlvbnNdKTtcbiAgICB2YXIgcG9pbnRlck1vdmVkID0gKDAsIHV0aWxzXzEudXNlUG9pbnRlck1vdmVkU2luY2VNb3VudCkoKTtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyByZWY6IHBhcmVudFJlZiwgc3R5bGU6IHtcbiAgICAgICAgICAgIG1heEhlaWdodDogcHJvcHMubWF4SGVpZ2h0IHx8IDQwMCxcbiAgICAgICAgICAgIHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsXG4gICAgICAgICAgICBvdmVyZmxvdzogXCJhdXRvXCIsXG4gICAgICAgIH0gfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHJvbGU6IFwibGlzdGJveFwiLCBpZDogS0JhclNlYXJjaF8xLktCQVJfTElTVEJPWCwgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IHJvd1ZpcnR1YWxpemVyLnRvdGFsU2l6ZSArIFwicHhcIixcbiAgICAgICAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgICAgICB9IH0sIHJvd1ZpcnR1YWxpemVyLnZpcnR1YWxJdGVtcy5tYXAoZnVuY3Rpb24gKHZpcnR1YWxSb3cpIHtcbiAgICAgICAgICAgIHZhciBpdGVtID0gaXRlbXNSZWYuY3VycmVudFt2aXJ0dWFsUm93LmluZGV4XTtcbiAgICAgICAgICAgIHZhciBoYW5kbGVycyA9IHR5cGVvZiBpdGVtICE9PSBcInN0cmluZ1wiICYmIHtcbiAgICAgICAgICAgICAgICBvblBvaW50ZXJNb3ZlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwb2ludGVyTW92ZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZUluZGV4ICE9PSB2aXJ0dWFsUm93LmluZGV4ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBxdWVyeS5zZXRBY3RpdmVJbmRleCh2aXJ0dWFsUm93LmluZGV4KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uUG9pbnRlckRvd246IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHF1ZXJ5LnNldEFjdGl2ZUluZGV4KHZpcnR1YWxSb3cuaW5kZXgpOyB9LFxuICAgICAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGV4ZWN1dGUoaXRlbSk7IH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyIGFjdGl2ZSA9IHZpcnR1YWxSb3cuaW5kZXggPT09IGFjdGl2ZUluZGV4O1xuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIF9fYXNzaWduKHsgcmVmOiBhY3RpdmUgPyBhY3RpdmVSZWYgOiBudWxsLCBpZDogKDAsIEtCYXJTZWFyY2hfMS5nZXRMaXN0Ym94SXRlbUlkKSh2aXJ0dWFsUm93LmluZGV4KSwgcm9sZTogXCJvcHRpb25cIiwgXCJhcmlhLXNlbGVjdGVkXCI6IGFjdGl2ZSwga2V5OiB2aXJ0dWFsUm93LmluZGV4LCBzdHlsZToge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgICAgICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoXCIgKyB2aXJ0dWFsUm93LnN0YXJ0ICsgXCJweClcIixcbiAgICAgICAgICAgICAgICB9IH0sIGhhbmRsZXJzKSwgUmVhY3QuY2xvbmVFbGVtZW50KHByb3BzLm9uUmVuZGVyKHtcbiAgICAgICAgICAgICAgICBpdGVtOiBpdGVtLFxuICAgICAgICAgICAgICAgIGFjdGl2ZTogYWN0aXZlLFxuICAgICAgICAgICAgfSksIHtcbiAgICAgICAgICAgICAgICByZWY6IHZpcnR1YWxSb3cubWVhc3VyZVJlZixcbiAgICAgICAgICAgIH0pKSk7XG4gICAgICAgIH0pKSkpO1xufTtcbmV4cG9ydHMuS0JhclJlc3VsdHMgPSBLQmFyUmVzdWx0cztcbiJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsIk9iamVjdCIsImFzc2lnbiIsInQiLCJzIiwiaSIsIm4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJfX2NyZWF0ZUJpbmRpbmciLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIl9fc2V0TW9kdWxlRGVmYXVsdCIsInYiLCJ2YWx1ZSIsIl9faW1wb3J0U3RhciIsIm1vZCIsIl9fZXNNb2R1bGUiLCJyZXN1bHQiLCJleHBvcnRzIiwiS0JhclJlc3VsdHMiLCJSZWFjdCIsInJlcXVpcmUiLCJyZWFjdF92aXJ0dWFsXzEiLCJLQmFyU2VhcmNoXzEiLCJ1c2VLQmFyXzEiLCJ1dGlsc18xIiwiU1RBUlRfSU5ERVgiLCJwcm9wcyIsImFjdGl2ZVJlZiIsInVzZVJlZiIsInBhcmVudFJlZiIsIml0ZW1zUmVmIiwiaXRlbXMiLCJjdXJyZW50Iiwicm93VmlydHVhbGl6ZXIiLCJ1c2VWaXJ0dWFsIiwic2l6ZSIsIl9hIiwidXNlS0JhciIsInN0YXRlIiwic2VhcmNoIiwic2VhcmNoUXVlcnkiLCJjdXJyZW50Um9vdEFjdGlvbklkIiwiYWN0aXZlSW5kZXgiLCJxdWVyeSIsIm9wdGlvbnMiLCJ1c2VFZmZlY3QiLCJoYW5kbGVyIiwiZXZlbnQiLCJpc0NvbXBvc2luZyIsImtleSIsImN0cmxLZXkiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsInNldEFjdGl2ZUluZGV4IiwiaW5kZXgiLCJuZXh0SW5kZXgiLCJjbGljayIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJjYXB0dXJlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInNjcm9sbFRvSW5kZXgiLCJhbGlnbiIsImV4ZWN1dGUiLCJ1c2VDYWxsYmFjayIsIml0ZW0iLCJfYiIsImNvbW1hbmQiLCJwZXJmb3JtIiwidG9nZ2xlIiwic2V0U2VhcmNoIiwic2V0Q3VycmVudFJvb3RBY3Rpb24iLCJpZCIsImNhbGxiYWNrcyIsIm9uU2VsZWN0QWN0aW9uIiwicG9pbnRlck1vdmVkIiwidXNlUG9pbnRlck1vdmVkU2luY2VNb3VudCIsImNyZWF0ZUVsZW1lbnQiLCJyZWYiLCJzdHlsZSIsIm1heEhlaWdodCIsInBvc2l0aW9uIiwib3ZlcmZsb3ciLCJyb2xlIiwiS0JBUl9MSVNUQk9YIiwiaGVpZ2h0IiwidG90YWxTaXplIiwid2lkdGgiLCJ2aXJ0dWFsSXRlbXMiLCJtYXAiLCJ2aXJ0dWFsUm93IiwiaGFuZGxlcnMiLCJvblBvaW50ZXJNb3ZlIiwib25Qb2ludGVyRG93biIsIm9uQ2xpY2siLCJhY3RpdmUiLCJnZXRMaXN0Ym94SXRlbUlkIiwidG9wIiwibGVmdCIsInRyYW5zZm9ybSIsInN0YXJ0IiwiY2xvbmVFbGVtZW50Iiwib25SZW5kZXIiLCJtZWFzdXJlUmVmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarResults.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarSearch.js":
/*!*********************************************!*\
  !*** ./node_modules/kbar/lib/KBarSearch.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (void 0) && (void 0).__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarSearch = exports.getListboxItemId = exports.KBAR_LISTBOX = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nexports.KBAR_LISTBOX = \"kbar-listbox\";\nvar getListboxItemId = function(id) {\n    return \"kbar-listbox-item-\" + id;\n};\nexports.getListboxItemId = getListboxItemId;\nfunction KBarSearch(props) {\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            search: state.searchQuery,\n            currentRootActionId: state.currentRootActionId,\n            actions: state.actions,\n            activeIndex: state.activeIndex,\n            showing: state.visualState === types_1.VisualState.showing\n        };\n    }), query = _a.query, search = _a.search, actions = _a.actions, currentRootActionId = _a.currentRootActionId, activeIndex = _a.activeIndex, showing = _a.showing, options = _a.options;\n    var _b = React.useState(search), inputValue = _b[0], setInputValue = _b[1];\n    React.useEffect(function() {\n        query.setSearch(inputValue);\n    }, [\n        inputValue,\n        query\n    ]);\n    var defaultPlaceholder = props.defaultPlaceholder, rest = __rest(props, [\n        \"defaultPlaceholder\"\n    ]);\n    React.useEffect(function() {\n        query.setSearch(\"\");\n        query.getInput().focus();\n        return function() {\n            return query.setSearch(\"\");\n        };\n    }, [\n        currentRootActionId,\n        query\n    ]);\n    var placeholder = React.useMemo(function() {\n        var defaultText = defaultPlaceholder !== null && defaultPlaceholder !== void 0 ? defaultPlaceholder : \"Type a command or search…\";\n        return currentRootActionId && actions[currentRootActionId] ? actions[currentRootActionId].name : defaultText;\n    }, [\n        actions,\n        currentRootActionId,\n        defaultPlaceholder\n    ]);\n    return React.createElement(\"input\", __assign({}, rest, {\n        ref: query.inputRefSetter,\n        autoFocus: true,\n        autoComplete: \"off\",\n        role: \"combobox\",\n        spellCheck: \"false\",\n        \"aria-expanded\": showing,\n        \"aria-controls\": exports.KBAR_LISTBOX,\n        \"aria-activedescendant\": (0, exports.getListboxItemId)(activeIndex),\n        value: inputValue,\n        placeholder: placeholder,\n        onChange: function(event) {\n            var _a, _b, _c;\n            (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, event);\n            setInputValue(event.target.value);\n            (_c = (_b = options === null || options === void 0 ? void 0 : options.callbacks) === null || _b === void 0 ? void 0 : _b.onQueryChange) === null || _c === void 0 ? void 0 : _c.call(_b, event.target.value);\n        },\n        onKeyDown: function(event) {\n            var _a;\n            (_a = props.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(props, event);\n            if (currentRootActionId && !search && event.key === \"Backspace\") {\n                var parent_1 = actions[currentRootActionId].parent;\n                query.setCurrentRootAction(parent_1);\n            }\n        }\n    }));\n}\nexports.KBarSearch = KBarSearch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarSearch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/ActionImpl.js":
/*!****************************************************!*\
  !*** ./node_modules/kbar/lib/action/ActionImpl.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ActionImpl = void 0;\nvar tiny_invariant_1 = __importDefault(__webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\nvar Command_1 = __webpack_require__(/*! ./Command */ \"(ssr)/./node_modules/kbar/lib/action/Command.js\");\nvar utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\n/**\n * Extends the configured keywords to include the section\n * This allows section names to be searched for.\n */ var extendKeywords = function(_a) {\n    var _b = _a.keywords, keywords = _b === void 0 ? \"\" : _b, _c = _a.section, section = _c === void 0 ? \"\" : _c;\n    return (keywords + \" \" + (typeof section === \"string\" ? section : section.name)).trim();\n};\nvar ActionImpl = /** @class */ function() {\n    function ActionImpl(action, options) {\n        var _this = this;\n        var _a;\n        this.priority = utils_1.Priority.NORMAL;\n        this.ancestors = [];\n        this.children = [];\n        Object.assign(this, action);\n        this.id = action.id;\n        this.name = action.name;\n        this.keywords = extendKeywords(action);\n        var perform = action.perform;\n        this.command = perform && new Command_1.Command({\n            perform: function() {\n                return perform(_this);\n            }\n        }, {\n            history: options.history\n        });\n        // Backwards compatibility\n        this.perform = (_a = this.command) === null || _a === void 0 ? void 0 : _a.perform;\n        if (action.parent) {\n            var parentActionImpl = options.store[action.parent];\n            (0, tiny_invariant_1.default)(parentActionImpl, \"attempted to create an action whos parent: \" + action.parent + \" does not exist in the store.\");\n            parentActionImpl.addChild(this);\n        }\n    }\n    ActionImpl.prototype.addChild = function(childActionImpl) {\n        // add all ancestors for the child action\n        childActionImpl.ancestors.unshift(this);\n        var parent = this.parentActionImpl;\n        while(parent){\n            childActionImpl.ancestors.unshift(parent);\n            parent = parent.parentActionImpl;\n        }\n        // we ensure that order of adding always goes\n        // parent -> children, so no need to recurse\n        this.children.push(childActionImpl);\n    };\n    ActionImpl.prototype.removeChild = function(actionImpl) {\n        var _this = this;\n        // recursively remove all children\n        var index = this.children.indexOf(actionImpl);\n        if (index !== -1) {\n            this.children.splice(index, 1);\n        }\n        if (actionImpl.children) {\n            actionImpl.children.forEach(function(child) {\n                _this.removeChild(child);\n            });\n        }\n    };\n    Object.defineProperty(ActionImpl.prototype, \"parentActionImpl\", {\n        // easily access parentActionImpl after creation\n        get: function() {\n            return this.ancestors[this.ancestors.length - 1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ActionImpl.create = function(action, options) {\n        return new ActionImpl(action, options);\n    };\n    return ActionImpl;\n}();\nexports.ActionImpl = ActionImpl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0FjdGlvbkltcGwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQUssU0FBVUMsR0FBRztJQUNqRSxPQUFPLE9BQVFBLElBQUlDLFVBQVUsR0FBSUQsTUFBTTtRQUFFLFdBQVdBO0lBQUk7QUFDNUQ7QUFDQUUsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtCQUFrQixHQUFHLEtBQUs7QUFDMUIsSUFBSUcsbUJBQW1CUixnQkFBZ0JTLG1CQUFPQSxDQUFDLHNGQUFnQjtBQUMvRCxJQUFJQyxZQUFZRCxtQkFBT0EsQ0FBQyxrRUFBVztBQUNuQyxJQUFJRSxVQUFVRixtQkFBT0EsQ0FBQyx3REFBVTtBQUNoQzs7O0NBR0MsR0FDRCxJQUFJRyxpQkFBaUIsU0FBVUMsRUFBRTtJQUM3QixJQUFJQyxLQUFLRCxHQUFHRSxRQUFRLEVBQUVBLFdBQVdELE9BQU8sS0FBSyxJQUFJLEtBQUtBLElBQUlFLEtBQUtILEdBQUdJLE9BQU8sRUFBRUEsVUFBVUQsT0FBTyxLQUFLLElBQUksS0FBS0E7SUFDMUcsT0FBTyxDQUFDRCxXQUFXLE1BQU8sUUFBT0UsWUFBWSxXQUFXQSxVQUFVQSxRQUFRQyxJQUFJLEdBQUdDLElBQUk7QUFDekY7QUFDQSxJQUFJWixhQUFhLFdBQVcsR0FBSTtJQUM1QixTQUFTQSxXQUFXYSxNQUFNLEVBQUVDLE9BQU87UUFDL0IsSUFBSUMsUUFBUSxJQUFJO1FBQ2hCLElBQUlUO1FBQ0osSUFBSSxDQUFDVSxRQUFRLEdBQUdaLFFBQVFhLFFBQVEsQ0FBQ0MsTUFBTTtRQUN2QyxJQUFJLENBQUNDLFNBQVMsR0FBRyxFQUFFO1FBQ25CLElBQUksQ0FBQ0MsUUFBUSxHQUFHLEVBQUU7UUFDbEJ4QixPQUFPeUIsTUFBTSxDQUFDLElBQUksRUFBRVI7UUFDcEIsSUFBSSxDQUFDUyxFQUFFLEdBQUdULE9BQU9TLEVBQUU7UUFDbkIsSUFBSSxDQUFDWCxJQUFJLEdBQUdFLE9BQU9GLElBQUk7UUFDdkIsSUFBSSxDQUFDSCxRQUFRLEdBQUdILGVBQWVRO1FBQy9CLElBQUlVLFVBQVVWLE9BQU9VLE9BQU87UUFDNUIsSUFBSSxDQUFDQyxPQUFPLEdBQ1JELFdBQ0ksSUFBSXBCLFVBQVVzQixPQUFPLENBQUM7WUFDbEJGLFNBQVM7Z0JBQWMsT0FBT0EsUUFBUVI7WUFBUTtRQUNsRCxHQUFHO1lBQ0NXLFNBQVNaLFFBQVFZLE9BQU87UUFDNUI7UUFDUiwwQkFBMEI7UUFDMUIsSUFBSSxDQUFDSCxPQUFPLEdBQUcsQ0FBQ2pCLEtBQUssSUFBSSxDQUFDa0IsT0FBTyxNQUFNLFFBQVFsQixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdpQixPQUFPO1FBQ2xGLElBQUlWLE9BQU9jLE1BQU0sRUFBRTtZQUNmLElBQUlDLG1CQUFtQmQsUUFBUWUsS0FBSyxDQUFDaEIsT0FBT2MsTUFBTSxDQUFDO1lBQ2xELElBQUcxQixpQkFBaUI2QixPQUFPLEVBQUVGLGtCQUFrQixnREFBZ0RmLE9BQU9jLE1BQU0sR0FBRztZQUNoSEMsaUJBQWlCRyxRQUFRLENBQUMsSUFBSTtRQUNsQztJQUNKO0lBQ0EvQixXQUFXZ0MsU0FBUyxDQUFDRCxRQUFRLEdBQUcsU0FBVUUsZUFBZTtRQUNyRCx5Q0FBeUM7UUFDekNBLGdCQUFnQmQsU0FBUyxDQUFDZSxPQUFPLENBQUMsSUFBSTtRQUN0QyxJQUFJUCxTQUFTLElBQUksQ0FBQ0MsZ0JBQWdCO1FBQ2xDLE1BQU9ELE9BQVE7WUFDWE0sZ0JBQWdCZCxTQUFTLENBQUNlLE9BQU8sQ0FBQ1A7WUFDbENBLFNBQVNBLE9BQU9DLGdCQUFnQjtRQUNwQztRQUNBLDZDQUE2QztRQUM3Qyw0Q0FBNEM7UUFDNUMsSUFBSSxDQUFDUixRQUFRLENBQUNlLElBQUksQ0FBQ0Y7SUFDdkI7SUFDQWpDLFdBQVdnQyxTQUFTLENBQUNJLFdBQVcsR0FBRyxTQUFVQyxVQUFVO1FBQ25ELElBQUl0QixRQUFRLElBQUk7UUFDaEIsa0NBQWtDO1FBQ2xDLElBQUl1QixRQUFRLElBQUksQ0FBQ2xCLFFBQVEsQ0FBQ21CLE9BQU8sQ0FBQ0Y7UUFDbEMsSUFBSUMsVUFBVSxDQUFDLEdBQUc7WUFDZCxJQUFJLENBQUNsQixRQUFRLENBQUNvQixNQUFNLENBQUNGLE9BQU87UUFDaEM7UUFDQSxJQUFJRCxXQUFXakIsUUFBUSxFQUFFO1lBQ3JCaUIsV0FBV2pCLFFBQVEsQ0FBQ3FCLE9BQU8sQ0FBQyxTQUFVQyxLQUFLO2dCQUN2QzNCLE1BQU1xQixXQUFXLENBQUNNO1lBQ3RCO1FBQ0o7SUFDSjtJQUNBOUMsT0FBT0MsY0FBYyxDQUFDRyxXQUFXZ0MsU0FBUyxFQUFFLG9CQUFvQjtRQUM1RCxnREFBZ0Q7UUFDaERXLEtBQUs7WUFDRCxPQUFPLElBQUksQ0FBQ3hCLFNBQVMsQ0FBQyxJQUFJLENBQUNBLFNBQVMsQ0FBQ3lCLE1BQU0sR0FBRyxFQUFFO1FBQ3BEO1FBQ0FDLFlBQVk7UUFDWkMsY0FBYztJQUNsQjtJQUNBOUMsV0FBVytDLE1BQU0sR0FBRyxTQUFVbEMsTUFBTSxFQUFFQyxPQUFPO1FBQ3pDLE9BQU8sSUFBSWQsV0FBV2EsUUFBUUM7SUFDbEM7SUFDQSxPQUFPZDtBQUNYO0FBQ0FGLGtCQUFrQixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi9hY3Rpb24vQWN0aW9uSW1wbC5qcz9kMjBkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BY3Rpb25JbXBsID0gdm9pZCAwO1xudmFyIHRpbnlfaW52YXJpYW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInRpbnktaW52YXJpYW50XCIpKTtcbnZhciBDb21tYW5kXzEgPSByZXF1aXJlKFwiLi9Db21tYW5kXCIpO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XG4vKipcbiAqIEV4dGVuZHMgdGhlIGNvbmZpZ3VyZWQga2V5d29yZHMgdG8gaW5jbHVkZSB0aGUgc2VjdGlvblxuICogVGhpcyBhbGxvd3Mgc2VjdGlvbiBuYW1lcyB0byBiZSBzZWFyY2hlZCBmb3IuXG4gKi9cbnZhciBleHRlbmRLZXl3b3JkcyA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBfYiA9IF9hLmtleXdvcmRzLCBrZXl3b3JkcyA9IF9iID09PSB2b2lkIDAgPyBcIlwiIDogX2IsIF9jID0gX2Euc2VjdGlvbiwgc2VjdGlvbiA9IF9jID09PSB2b2lkIDAgPyBcIlwiIDogX2M7XG4gICAgcmV0dXJuIChrZXl3b3JkcyArIFwiIFwiICsgKHR5cGVvZiBzZWN0aW9uID09PSBcInN0cmluZ1wiID8gc2VjdGlvbiA6IHNlY3Rpb24ubmFtZSkpLnRyaW0oKTtcbn07XG52YXIgQWN0aW9uSW1wbCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBY3Rpb25JbXBsKGFjdGlvbiwgb3B0aW9ucykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHRoaXMucHJpb3JpdHkgPSB1dGlsc18xLlByaW9yaXR5Lk5PUk1BTDtcbiAgICAgICAgdGhpcy5hbmNlc3RvcnMgPSBbXTtcbiAgICAgICAgdGhpcy5jaGlsZHJlbiA9IFtdO1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGFjdGlvbik7XG4gICAgICAgIHRoaXMuaWQgPSBhY3Rpb24uaWQ7XG4gICAgICAgIHRoaXMubmFtZSA9IGFjdGlvbi5uYW1lO1xuICAgICAgICB0aGlzLmtleXdvcmRzID0gZXh0ZW5kS2V5d29yZHMoYWN0aW9uKTtcbiAgICAgICAgdmFyIHBlcmZvcm0gPSBhY3Rpb24ucGVyZm9ybTtcbiAgICAgICAgdGhpcy5jb21tYW5kID1cbiAgICAgICAgICAgIHBlcmZvcm0gJiZcbiAgICAgICAgICAgICAgICBuZXcgQ29tbWFuZF8xLkNvbW1hbmQoe1xuICAgICAgICAgICAgICAgICAgICBwZXJmb3JtOiBmdW5jdGlvbiAoKSB7IHJldHVybiBwZXJmb3JtKF90aGlzKTsgfSxcbiAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk6IG9wdGlvbnMuaGlzdG9yeSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgLy8gQmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbiAgICAgICAgdGhpcy5wZXJmb3JtID0gKF9hID0gdGhpcy5jb21tYW5kKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucGVyZm9ybTtcbiAgICAgICAgaWYgKGFjdGlvbi5wYXJlbnQpIHtcbiAgICAgICAgICAgIHZhciBwYXJlbnRBY3Rpb25JbXBsID0gb3B0aW9ucy5zdG9yZVthY3Rpb24ucGFyZW50XTtcbiAgICAgICAgICAgICgwLCB0aW55X2ludmFyaWFudF8xLmRlZmF1bHQpKHBhcmVudEFjdGlvbkltcGwsIFwiYXR0ZW1wdGVkIHRvIGNyZWF0ZSBhbiBhY3Rpb24gd2hvcyBwYXJlbnQ6IFwiICsgYWN0aW9uLnBhcmVudCArIFwiIGRvZXMgbm90IGV4aXN0IGluIHRoZSBzdG9yZS5cIik7XG4gICAgICAgICAgICBwYXJlbnRBY3Rpb25JbXBsLmFkZENoaWxkKHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIEFjdGlvbkltcGwucHJvdG90eXBlLmFkZENoaWxkID0gZnVuY3Rpb24gKGNoaWxkQWN0aW9uSW1wbCkge1xuICAgICAgICAvLyBhZGQgYWxsIGFuY2VzdG9ycyBmb3IgdGhlIGNoaWxkIGFjdGlvblxuICAgICAgICBjaGlsZEFjdGlvbkltcGwuYW5jZXN0b3JzLnVuc2hpZnQodGhpcyk7XG4gICAgICAgIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudEFjdGlvbkltcGw7XG4gICAgICAgIHdoaWxlIChwYXJlbnQpIHtcbiAgICAgICAgICAgIGNoaWxkQWN0aW9uSW1wbC5hbmNlc3RvcnMudW5zaGlmdChwYXJlbnQpO1xuICAgICAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudEFjdGlvbkltcGw7XG4gICAgICAgIH1cbiAgICAgICAgLy8gd2UgZW5zdXJlIHRoYXQgb3JkZXIgb2YgYWRkaW5nIGFsd2F5cyBnb2VzXG4gICAgICAgIC8vIHBhcmVudCAtPiBjaGlsZHJlbiwgc28gbm8gbmVlZCB0byByZWN1cnNlXG4gICAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChjaGlsZEFjdGlvbkltcGwpO1xuICAgIH07XG4gICAgQWN0aW9uSW1wbC5wcm90b3R5cGUucmVtb3ZlQ2hpbGQgPSBmdW5jdGlvbiAoYWN0aW9uSW1wbCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAvLyByZWN1cnNpdmVseSByZW1vdmUgYWxsIGNoaWxkcmVuXG4gICAgICAgIHZhciBpbmRleCA9IHRoaXMuY2hpbGRyZW4uaW5kZXhPZihhY3Rpb25JbXBsKTtcbiAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbi5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhY3Rpb25JbXBsLmNoaWxkcmVuKSB7XG4gICAgICAgICAgICBhY3Rpb25JbXBsLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMucmVtb3ZlQ2hpbGQoY2hpbGQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBY3Rpb25JbXBsLnByb3RvdHlwZSwgXCJwYXJlbnRBY3Rpb25JbXBsXCIsIHtcbiAgICAgICAgLy8gZWFzaWx5IGFjY2VzcyBwYXJlbnRBY3Rpb25JbXBsIGFmdGVyIGNyZWF0aW9uXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYW5jZXN0b3JzW3RoaXMuYW5jZXN0b3JzLmxlbmd0aCAtIDFdO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgQWN0aW9uSW1wbC5jcmVhdGUgPSBmdW5jdGlvbiAoYWN0aW9uLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgQWN0aW9uSW1wbChhY3Rpb24sIG9wdGlvbnMpO1xuICAgIH07XG4gICAgcmV0dXJuIEFjdGlvbkltcGw7XG59KCkpO1xuZXhwb3J0cy5BY3Rpb25JbXBsID0gQWN0aW9uSW1wbDtcbiJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJBY3Rpb25JbXBsIiwidGlueV9pbnZhcmlhbnRfMSIsInJlcXVpcmUiLCJDb21tYW5kXzEiLCJ1dGlsc18xIiwiZXh0ZW5kS2V5d29yZHMiLCJfYSIsIl9iIiwia2V5d29yZHMiLCJfYyIsInNlY3Rpb24iLCJuYW1lIiwidHJpbSIsImFjdGlvbiIsIm9wdGlvbnMiLCJfdGhpcyIsInByaW9yaXR5IiwiUHJpb3JpdHkiLCJOT1JNQUwiLCJhbmNlc3RvcnMiLCJjaGlsZHJlbiIsImFzc2lnbiIsImlkIiwicGVyZm9ybSIsImNvbW1hbmQiLCJDb21tYW5kIiwiaGlzdG9yeSIsInBhcmVudCIsInBhcmVudEFjdGlvbkltcGwiLCJzdG9yZSIsImRlZmF1bHQiLCJhZGRDaGlsZCIsInByb3RvdHlwZSIsImNoaWxkQWN0aW9uSW1wbCIsInVuc2hpZnQiLCJwdXNoIiwicmVtb3ZlQ2hpbGQiLCJhY3Rpb25JbXBsIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwiZm9yRWFjaCIsImNoaWxkIiwiZ2V0IiwibGVuZ3RoIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsImNyZWF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/ActionImpl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/ActionInterface.js":
/*!*********************************************************!*\
  !*** ./node_modules/kbar/lib/action/ActionInterface.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ActionInterface = void 0;\nvar tiny_invariant_1 = __importDefault(__webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\nvar ActionImpl_1 = __webpack_require__(/*! ./ActionImpl */ \"(ssr)/./node_modules/kbar/lib/action/ActionImpl.js\");\nvar ActionInterface = /** @class */ function() {\n    function ActionInterface(actions, options) {\n        if (actions === void 0) {\n            actions = [];\n        }\n        if (options === void 0) {\n            options = {};\n        }\n        this.actions = {};\n        this.options = options;\n        this.add(actions);\n    }\n    ActionInterface.prototype.add = function(actions) {\n        for(var i = 0; i < actions.length; i++){\n            var action = actions[i];\n            if (action.parent) {\n                (0, tiny_invariant_1.default)(this.actions[action.parent], 'Attempted to create action \"' + action.name + '\" without registering its parent \"' + action.parent + '\" first.');\n            }\n            this.actions[action.id] = ActionImpl_1.ActionImpl.create(action, {\n                history: this.options.historyManager,\n                store: this.actions\n            });\n        }\n        return __assign({}, this.actions);\n    };\n    ActionInterface.prototype.remove = function(actions) {\n        var _this = this;\n        actions.forEach(function(action) {\n            var actionImpl = _this.actions[action.id];\n            if (!actionImpl) return;\n            var children = actionImpl.children;\n            while(children.length){\n                var child = children.pop();\n                if (!child) return;\n                delete _this.actions[child.id];\n                if (child.parentActionImpl) child.parentActionImpl.removeChild(child);\n                if (child.children) children.push.apply(children, child.children);\n            }\n            if (actionImpl.parentActionImpl) {\n                actionImpl.parentActionImpl.removeChild(actionImpl);\n            }\n            delete _this.actions[action.id];\n        });\n        return __assign({}, this.actions);\n    };\n    return ActionInterface;\n}();\nexports.ActionInterface = ActionInterface;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0FjdGlvbkludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLFdBQVcsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxRQUFRLElBQUs7SUFDdENBLFdBQVdDLE9BQU9DLE1BQU0sSUFBSSxTQUFTQyxDQUFDO1FBQ2xDLElBQUssSUFBSUMsR0FBR0MsSUFBSSxHQUFHQyxJQUFJQyxVQUFVQyxNQUFNLEVBQUVILElBQUlDLEdBQUdELElBQUs7WUFDakRELElBQUlHLFNBQVMsQ0FBQ0YsRUFBRTtZQUNoQixJQUFLLElBQUlJLEtBQUtMLEVBQUcsSUFBSUgsT0FBT1MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssSUFDekROLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFDbkI7UUFDQSxPQUFPTjtJQUNYO0lBQ0EsT0FBT0gsU0FBU2EsS0FBSyxDQUFDLElBQUksRUFBRU47QUFDaEM7QUFDQSxJQUFJTyxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQUssU0FBVUMsR0FBRztJQUNqRSxPQUFPLE9BQVFBLElBQUlDLFVBQVUsR0FBSUQsTUFBTTtRQUFFLFdBQVdBO0lBQUk7QUFDNUQ7QUFDQWQsOENBQTZDO0lBQUVrQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBRyxLQUFLO0FBQy9CLElBQUlHLG1CQUFtQlAsZ0JBQWdCUSxtQkFBT0EsQ0FBQyxzRkFBZ0I7QUFDL0QsSUFBSUMsZUFBZUQsbUJBQU9BLENBQUMsd0VBQWM7QUFDekMsSUFBSUYsa0JBQWtCLFdBQVcsR0FBSTtJQUNqQyxTQUFTQSxnQkFBZ0JJLE9BQU8sRUFBRUMsT0FBTztRQUNyQyxJQUFJRCxZQUFZLEtBQUssR0FBRztZQUFFQSxVQUFVLEVBQUU7UUFBRTtRQUN4QyxJQUFJQyxZQUFZLEtBQUssR0FBRztZQUFFQSxVQUFVLENBQUM7UUFBRztRQUN4QyxJQUFJLENBQUNELE9BQU8sR0FBRyxDQUFDO1FBQ2hCLElBQUksQ0FBQ0MsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ0MsR0FBRyxDQUFDRjtJQUNiO0lBQ0FKLGdCQUFnQlYsU0FBUyxDQUFDZ0IsR0FBRyxHQUFHLFNBQVVGLE9BQU87UUFDN0MsSUFBSyxJQUFJbkIsSUFBSSxHQUFHQSxJQUFJbUIsUUFBUWhCLE1BQU0sRUFBRUgsSUFBSztZQUNyQyxJQUFJc0IsU0FBU0gsT0FBTyxDQUFDbkIsRUFBRTtZQUN2QixJQUFJc0IsT0FBT0MsTUFBTSxFQUFFO2dCQUNkLElBQUdQLGlCQUFpQlEsT0FBTyxFQUFFLElBQUksQ0FBQ0wsT0FBTyxDQUFDRyxPQUFPQyxNQUFNLENBQUMsRUFBRSxpQ0FBa0NELE9BQU9HLElBQUksR0FBRyx1Q0FBeUNILE9BQU9DLE1BQU0sR0FBRztZQUN4SztZQUNBLElBQUksQ0FBQ0osT0FBTyxDQUFDRyxPQUFPSSxFQUFFLENBQUMsR0FBR1IsYUFBYVMsVUFBVSxDQUFDQyxNQUFNLENBQUNOLFFBQVE7Z0JBQzdETyxTQUFTLElBQUksQ0FBQ1QsT0FBTyxDQUFDVSxjQUFjO2dCQUNwQ0MsT0FBTyxJQUFJLENBQUNaLE9BQU87WUFDdkI7UUFDSjtRQUNBLE9BQU94QixTQUFTLENBQUMsR0FBRyxJQUFJLENBQUN3QixPQUFPO0lBQ3BDO0lBQ0FKLGdCQUFnQlYsU0FBUyxDQUFDMkIsTUFBTSxHQUFHLFNBQVViLE9BQU87UUFDaEQsSUFBSWMsUUFBUSxJQUFJO1FBQ2hCZCxRQUFRZSxPQUFPLENBQUMsU0FBVVosTUFBTTtZQUM1QixJQUFJYSxhQUFhRixNQUFNZCxPQUFPLENBQUNHLE9BQU9JLEVBQUUsQ0FBQztZQUN6QyxJQUFJLENBQUNTLFlBQ0Q7WUFDSixJQUFJQyxXQUFXRCxXQUFXQyxRQUFRO1lBQ2xDLE1BQU9BLFNBQVNqQyxNQUFNLENBQUU7Z0JBQ3BCLElBQUlrQyxRQUFRRCxTQUFTRSxHQUFHO2dCQUN4QixJQUFJLENBQUNELE9BQ0Q7Z0JBQ0osT0FBT0osTUFBTWQsT0FBTyxDQUFDa0IsTUFBTVgsRUFBRSxDQUFDO2dCQUM5QixJQUFJVyxNQUFNRSxnQkFBZ0IsRUFDdEJGLE1BQU1FLGdCQUFnQixDQUFDQyxXQUFXLENBQUNIO2dCQUN2QyxJQUFJQSxNQUFNRCxRQUFRLEVBQ2RBLFNBQVNLLElBQUksQ0FBQ2pDLEtBQUssQ0FBQzRCLFVBQVVDLE1BQU1ELFFBQVE7WUFDcEQ7WUFDQSxJQUFJRCxXQUFXSSxnQkFBZ0IsRUFBRTtnQkFDN0JKLFdBQVdJLGdCQUFnQixDQUFDQyxXQUFXLENBQUNMO1lBQzVDO1lBQ0EsT0FBT0YsTUFBTWQsT0FBTyxDQUFDRyxPQUFPSSxFQUFFLENBQUM7UUFDbkM7UUFDQSxPQUFPL0IsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDd0IsT0FBTztJQUNwQztJQUNBLE9BQU9KO0FBQ1g7QUFDQUYsdUJBQXVCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL2FjdGlvbi9BY3Rpb25JbnRlcmZhY2UuanM/ZGM3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFjdGlvbkludGVyZmFjZSA9IHZvaWQgMDtcbnZhciB0aW55X2ludmFyaWFudF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJ0aW55LWludmFyaWFudFwiKSk7XG52YXIgQWN0aW9uSW1wbF8xID0gcmVxdWlyZShcIi4vQWN0aW9uSW1wbFwiKTtcbnZhciBBY3Rpb25JbnRlcmZhY2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQWN0aW9uSW50ZXJmYWNlKGFjdGlvbnMsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGFjdGlvbnMgPT09IHZvaWQgMCkgeyBhY3Rpb25zID0gW107IH1cbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICAgICAgdGhpcy5hY3Rpb25zID0ge307XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMuYWRkKGFjdGlvbnMpO1xuICAgIH1cbiAgICBBY3Rpb25JbnRlcmZhY2UucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIChhY3Rpb25zKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWN0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGFjdGlvbiA9IGFjdGlvbnNbaV07XG4gICAgICAgICAgICBpZiAoYWN0aW9uLnBhcmVudCkge1xuICAgICAgICAgICAgICAgICgwLCB0aW55X2ludmFyaWFudF8xLmRlZmF1bHQpKHRoaXMuYWN0aW9uc1thY3Rpb24ucGFyZW50XSwgXCJBdHRlbXB0ZWQgdG8gY3JlYXRlIGFjdGlvbiBcXFwiXCIgKyBhY3Rpb24ubmFtZSArIFwiXFxcIiB3aXRob3V0IHJlZ2lzdGVyaW5nIGl0cyBwYXJlbnQgXFxcIlwiICsgYWN0aW9uLnBhcmVudCArIFwiXFxcIiBmaXJzdC5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmFjdGlvbnNbYWN0aW9uLmlkXSA9IEFjdGlvbkltcGxfMS5BY3Rpb25JbXBsLmNyZWF0ZShhY3Rpb24sIHtcbiAgICAgICAgICAgICAgICBoaXN0b3J5OiB0aGlzLm9wdGlvbnMuaGlzdG9yeU1hbmFnZXIsXG4gICAgICAgICAgICAgICAgc3RvcmU6IHRoaXMuYWN0aW9ucyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfX2Fzc2lnbih7fSwgdGhpcy5hY3Rpb25zKTtcbiAgICB9O1xuICAgIEFjdGlvbkludGVyZmFjZS5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24gKGFjdGlvbnMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgYWN0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgICAgIHZhciBhY3Rpb25JbXBsID0gX3RoaXMuYWN0aW9uc1thY3Rpb24uaWRdO1xuICAgICAgICAgICAgaWYgKCFhY3Rpb25JbXBsKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIHZhciBjaGlsZHJlbiA9IGFjdGlvbkltcGwuY2hpbGRyZW47XG4gICAgICAgICAgICB3aGlsZSAoY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNoaWxkID0gY2hpbGRyZW4ucG9wKCk7XG4gICAgICAgICAgICAgICAgaWYgKCFjaGlsZClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBfdGhpcy5hY3Rpb25zW2NoaWxkLmlkXTtcbiAgICAgICAgICAgICAgICBpZiAoY2hpbGQucGFyZW50QWN0aW9uSW1wbClcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQucGFyZW50QWN0aW9uSW1wbC5yZW1vdmVDaGlsZChjaGlsZCk7XG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkLmNoaWxkcmVuKVxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbi5wdXNoLmFwcGx5KGNoaWxkcmVuLCBjaGlsZC5jaGlsZHJlbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYWN0aW9uSW1wbC5wYXJlbnRBY3Rpb25JbXBsKSB7XG4gICAgICAgICAgICAgICAgYWN0aW9uSW1wbC5wYXJlbnRBY3Rpb25JbXBsLnJlbW92ZUNoaWxkKGFjdGlvbkltcGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGVsZXRlIF90aGlzLmFjdGlvbnNbYWN0aW9uLmlkXTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBfX2Fzc2lnbih7fSwgdGhpcy5hY3Rpb25zKTtcbiAgICB9O1xuICAgIHJldHVybiBBY3Rpb25JbnRlcmZhY2U7XG59KCkpO1xuZXhwb3J0cy5BY3Rpb25JbnRlcmZhY2UgPSBBY3Rpb25JbnRlcmZhY2U7XG4iXSwibmFtZXMiOlsiX19hc3NpZ24iLCJPYmplY3QiLCJhc3NpZ24iLCJ0IiwicyIsImkiLCJuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiX19pbXBvcnREZWZhdWx0IiwibW9kIiwiX19lc01vZHVsZSIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQWN0aW9uSW50ZXJmYWNlIiwidGlueV9pbnZhcmlhbnRfMSIsInJlcXVpcmUiLCJBY3Rpb25JbXBsXzEiLCJhY3Rpb25zIiwib3B0aW9ucyIsImFkZCIsImFjdGlvbiIsInBhcmVudCIsImRlZmF1bHQiLCJuYW1lIiwiaWQiLCJBY3Rpb25JbXBsIiwiY3JlYXRlIiwiaGlzdG9yeSIsImhpc3RvcnlNYW5hZ2VyIiwic3RvcmUiLCJyZW1vdmUiLCJfdGhpcyIsImZvckVhY2giLCJhY3Rpb25JbXBsIiwiY2hpbGRyZW4iLCJjaGlsZCIsInBvcCIsInBhcmVudEFjdGlvbkltcGwiLCJyZW1vdmVDaGlsZCIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/ActionInterface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/Command.js":
/*!*************************************************!*\
  !*** ./node_modules/kbar/lib/action/Command.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Command = void 0;\nvar Command = /** @class */ function() {\n    function Command(command, options) {\n        var _this = this;\n        if (options === void 0) {\n            options = {};\n        }\n        this.perform = function() {\n            var negate = command.perform();\n            // no need for history if non negatable\n            if (typeof negate !== \"function\") return;\n            // return if no history enabled\n            var history = options.history;\n            if (!history) return;\n            // since we are performing the same action, we'll clean up the\n            // previous call to the action and create a new history record\n            if (_this.historyItem) {\n                history.remove(_this.historyItem);\n            }\n            _this.historyItem = history.add({\n                perform: command.perform,\n                negate: negate\n            });\n            _this.history = {\n                undo: function() {\n                    return history.undo(_this.historyItem);\n                },\n                redo: function() {\n                    return history.redo(_this.historyItem);\n                }\n            };\n        };\n    }\n    return Command;\n}();\nexports.Command = Command;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0NvbW1hbmQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGVBQWUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlFLFVBQVUsV0FBVyxHQUFJO0lBQ3pCLFNBQVNBLFFBQVFDLE9BQU8sRUFBRUMsT0FBTztRQUM3QixJQUFJQyxRQUFRLElBQUk7UUFDaEIsSUFBSUQsWUFBWSxLQUFLLEdBQUc7WUFBRUEsVUFBVSxDQUFDO1FBQUc7UUFDeEMsSUFBSSxDQUFDRSxPQUFPLEdBQUc7WUFDWCxJQUFJQyxTQUFTSixRQUFRRyxPQUFPO1lBQzVCLHVDQUF1QztZQUN2QyxJQUFJLE9BQU9DLFdBQVcsWUFDbEI7WUFDSiwrQkFBK0I7WUFDL0IsSUFBSUMsVUFBVUosUUFBUUksT0FBTztZQUM3QixJQUFJLENBQUNBLFNBQ0Q7WUFDSiw4REFBOEQ7WUFDOUQsOERBQThEO1lBQzlELElBQUlILE1BQU1JLFdBQVcsRUFBRTtnQkFDbkJELFFBQVFFLE1BQU0sQ0FBQ0wsTUFBTUksV0FBVztZQUNwQztZQUNBSixNQUFNSSxXQUFXLEdBQUdELFFBQVFHLEdBQUcsQ0FBQztnQkFDNUJMLFNBQVNILFFBQVFHLE9BQU87Z0JBQ3hCQyxRQUFRQTtZQUNaO1lBQ0FGLE1BQU1HLE9BQU8sR0FBRztnQkFDWkksTUFBTTtvQkFBYyxPQUFPSixRQUFRSSxJQUFJLENBQUNQLE1BQU1JLFdBQVc7Z0JBQUc7Z0JBQzVESSxNQUFNO29CQUFjLE9BQU9MLFFBQVFLLElBQUksQ0FBQ1IsTUFBTUksV0FBVztnQkFBRztZQUNoRTtRQUNKO0lBQ0o7SUFDQSxPQUFPUDtBQUNYO0FBQ0FGLGVBQWUsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0NvbW1hbmQuanM/MzFmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29tbWFuZCA9IHZvaWQgMDtcbnZhciBDb21tYW5kID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENvbW1hbmQoY29tbWFuZCwgb3B0aW9ucykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgICAgICB0aGlzLnBlcmZvcm0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgbmVnYXRlID0gY29tbWFuZC5wZXJmb3JtKCk7XG4gICAgICAgICAgICAvLyBubyBuZWVkIGZvciBoaXN0b3J5IGlmIG5vbiBuZWdhdGFibGVcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbmVnYXRlICE9PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgLy8gcmV0dXJuIGlmIG5vIGhpc3RvcnkgZW5hYmxlZFxuICAgICAgICAgICAgdmFyIGhpc3RvcnkgPSBvcHRpb25zLmhpc3Rvcnk7XG4gICAgICAgICAgICBpZiAoIWhpc3RvcnkpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgLy8gc2luY2Ugd2UgYXJlIHBlcmZvcm1pbmcgdGhlIHNhbWUgYWN0aW9uLCB3ZSdsbCBjbGVhbiB1cCB0aGVcbiAgICAgICAgICAgIC8vIHByZXZpb3VzIGNhbGwgdG8gdGhlIGFjdGlvbiBhbmQgY3JlYXRlIGEgbmV3IGhpc3RvcnkgcmVjb3JkXG4gICAgICAgICAgICBpZiAoX3RoaXMuaGlzdG9yeUl0ZW0pIHtcbiAgICAgICAgICAgICAgICBoaXN0b3J5LnJlbW92ZShfdGhpcy5oaXN0b3J5SXRlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5oaXN0b3J5SXRlbSA9IGhpc3RvcnkuYWRkKHtcbiAgICAgICAgICAgICAgICBwZXJmb3JtOiBjb21tYW5kLnBlcmZvcm0sXG4gICAgICAgICAgICAgICAgbmVnYXRlOiBuZWdhdGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIF90aGlzLmhpc3RvcnkgPSB7XG4gICAgICAgICAgICAgICAgdW5kbzogZnVuY3Rpb24gKCkgeyByZXR1cm4gaGlzdG9yeS51bmRvKF90aGlzLmhpc3RvcnlJdGVtKTsgfSxcbiAgICAgICAgICAgICAgICByZWRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBoaXN0b3J5LnJlZG8oX3RoaXMuaGlzdG9yeUl0ZW0pOyB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIENvbW1hbmQ7XG59KCkpO1xuZXhwb3J0cy5Db21tYW5kID0gQ29tbWFuZDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNvbW1hbmQiLCJjb21tYW5kIiwib3B0aW9ucyIsIl90aGlzIiwicGVyZm9ybSIsIm5lZ2F0ZSIsImhpc3RvcnkiLCJoaXN0b3J5SXRlbSIsInJlbW92ZSIsImFkZCIsInVuZG8iLCJyZWRvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/Command.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/HistoryImpl.js":
/*!*****************************************************!*\
  !*** ./node_modules/kbar/lib/action/HistoryImpl.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.history = exports.HistoryItemImpl = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar HistoryItemImpl = /** @class */ function() {\n    function HistoryItemImpl(item) {\n        this.perform = item.perform;\n        this.negate = item.negate;\n    }\n    HistoryItemImpl.create = function(item) {\n        return new HistoryItemImpl(item);\n    };\n    return HistoryItemImpl;\n}();\nexports.HistoryItemImpl = HistoryItemImpl;\nvar HistoryImpl = /** @class */ function() {\n    function HistoryImpl() {\n        this.undoStack = [];\n        this.redoStack = [];\n        if (!HistoryImpl.instance) {\n            HistoryImpl.instance = this;\n            this.init();\n        }\n        return HistoryImpl.instance;\n    }\n    HistoryImpl.prototype.init = function() {\n        var _this = this;\n        if (true) return;\n        window.addEventListener(\"keydown\", function(event) {\n            var _a;\n            if (!_this.redoStack.length && !_this.undoStack.length || (0, utils_1.shouldRejectKeystrokes)()) {\n                return;\n            }\n            var key = (_a = event.key) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n            if (event.metaKey && key === \"z\" && event.shiftKey) {\n                _this.redo();\n            } else if (event.metaKey && key === \"z\") {\n                _this.undo();\n            }\n        });\n    };\n    HistoryImpl.prototype.add = function(item) {\n        var historyItem = HistoryItemImpl.create(item);\n        this.undoStack.push(historyItem);\n        return historyItem;\n    };\n    HistoryImpl.prototype.remove = function(item) {\n        var undoIndex = this.undoStack.findIndex(function(i) {\n            return i === item;\n        });\n        if (undoIndex !== -1) {\n            this.undoStack.splice(undoIndex, 1);\n            return;\n        }\n        var redoIndex = this.redoStack.findIndex(function(i) {\n            return i === item;\n        });\n        if (redoIndex !== -1) {\n            this.redoStack.splice(redoIndex, 1);\n        }\n    };\n    HistoryImpl.prototype.undo = function(item) {\n        // if not undoing a specific item, just undo the latest\n        if (!item) {\n            var item_1 = this.undoStack.pop();\n            if (!item_1) return;\n            item_1 === null || item_1 === void 0 ? void 0 : item_1.negate();\n            this.redoStack.push(item_1);\n            return item_1;\n        }\n        // else undo the specific item\n        var index = this.undoStack.findIndex(function(i) {\n            return i === item;\n        });\n        if (index === -1) return;\n        this.undoStack.splice(index, 1);\n        item.negate();\n        this.redoStack.push(item);\n        return item;\n    };\n    HistoryImpl.prototype.redo = function(item) {\n        if (!item) {\n            var item_2 = this.redoStack.pop();\n            if (!item_2) return;\n            item_2 === null || item_2 === void 0 ? void 0 : item_2.perform();\n            this.undoStack.push(item_2);\n            return item_2;\n        }\n        var index = this.redoStack.findIndex(function(i) {\n            return i === item;\n        });\n        if (index === -1) return;\n        this.redoStack.splice(index, 1);\n        item.perform();\n        this.undoStack.push(item);\n        return item;\n    };\n    HistoryImpl.prototype.reset = function() {\n        this.undoStack.splice(0);\n        this.redoStack.splice(0);\n    };\n    return HistoryImpl;\n}();\nvar history = new HistoryImpl();\nexports.history = history;\nObject.freeze(history);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/HistoryImpl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/index.js":
/*!***********************************************!*\
  !*** ./node_modules/kbar/lib/action/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./ActionInterface */ \"(ssr)/./node_modules/kbar/lib/action/ActionInterface.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ActionImpl */ \"(ssr)/./node_modules/kbar/lib/action/ActionImpl.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkosT0FBT08sY0FBYyxDQUFDTCxHQUFHRyxJQUFJO1FBQUVHLFlBQVk7UUFBTUMsS0FBSztZQUFhLE9BQU9OLENBQUMsQ0FBQ0MsRUFBRTtRQUFFO0lBQUU7QUFDdEYsSUFBTSxTQUFTRixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJTSxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVNQLENBQUMsRUFBRVEsUUFBTztJQUNqRSxJQUFLLElBQUlDLEtBQUtULEVBQUcsSUFBSVMsTUFBTSxhQUFhLENBQUNaLE9BQU9hLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFVBQVNDLElBQUliLGdCQUFnQlksVUFBU1IsR0FBR1M7QUFDM0g7QUFDQVosOENBQTZDO0lBQUVnQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdETixhQUFhTyxtQkFBT0EsQ0FBQyxrRkFBbUIsR0FBR047QUFDM0NELGFBQWFPLG1CQUFPQSxDQUFDLHdFQUFjLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL2FjdGlvbi9pbmRleC5qcz82N2E5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQWN0aW9uSW50ZXJmYWNlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9BY3Rpb25JbXBsXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIl9fZXhwb3J0U3RhciIsImV4cG9ydHMiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwidmFsdWUiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/index.js":
/*!****************************************!*\
  !*** ./node_modules/kbar/lib/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Priority = exports.createAction = void 0;\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nObject.defineProperty(exports, \"createAction\", ({\n    enumerable: true,\n    get: function() {\n        return utils_1.createAction;\n    }\n}));\nObject.defineProperty(exports, \"Priority\", ({\n    enumerable: true,\n    get: function() {\n        return utils_1.Priority;\n    }\n}));\n__exportStar(__webpack_require__(/*! ./useMatches */ \"(ssr)/./node_modules/kbar/lib/useMatches.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarPortal */ \"(ssr)/./node_modules/kbar/lib/KBarPortal.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarPositioner */ \"(ssr)/./node_modules/kbar/lib/KBarPositioner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarSearch */ \"(ssr)/./node_modules/kbar/lib/KBarSearch.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarResults */ \"(ssr)/./node_modules/kbar/lib/KBarResults.js\"), exports);\n__exportStar(__webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\"), exports);\n__exportStar(__webpack_require__(/*! ./useRegisterActions */ \"(ssr)/./node_modules/kbar/lib/useRegisterActions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarContextProvider */ \"(ssr)/./node_modules/kbar/lib/KBarContextProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarAnimator */ \"(ssr)/./node_modules/kbar/lib/KBarAnimator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./action */ \"(ssr)/./node_modules/kbar/lib/action/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQU1DLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCSixPQUFPTyxjQUFjLENBQUNMLEdBQUdHLElBQUk7UUFBRUcsWUFBWTtRQUFNQyxLQUFLO1lBQWEsT0FBT04sQ0FBQyxDQUFDQyxFQUFFO1FBQUU7SUFBRTtBQUN0RixJQUFNLFNBQVNGLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlNLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1AsQ0FBQyxFQUFFUSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS1QsRUFBRyxJQUFJUyxNQUFNLGFBQWEsQ0FBQ1osT0FBT2EsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osVUFBU0MsSUFBSWIsZ0JBQWdCWSxVQUFTUixHQUFHUztBQUMzSDtBQUNBWiw4Q0FBNkM7SUFBRWdCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RMLGdCQUFnQixHQUFHQSxvQkFBb0IsR0FBRyxLQUFLO0FBQy9DLElBQUlRLFVBQVVDLG1CQUFPQSxDQUFDLHVEQUFTO0FBQy9CcEIsZ0RBQStDO0lBQUVRLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9VLFFBQVFELFlBQVk7SUFBRTtBQUFFLENBQUMsRUFBQztBQUN2SGxCLDRDQUEyQztJQUFFUSxZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPVSxRQUFRRixRQUFRO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDL0dQLGFBQWFVLG1CQUFPQSxDQUFDLGlFQUFjLEdBQUdUO0FBQ3RDRCxhQUFhVSxtQkFBT0EsQ0FBQyxpRUFBYyxHQUFHVDtBQUN0Q0QsYUFBYVUsbUJBQU9BLENBQUMseUVBQWtCLEdBQUdUO0FBQzFDRCxhQUFhVSxtQkFBT0EsQ0FBQyxpRUFBYyxHQUFHVDtBQUN0Q0QsYUFBYVUsbUJBQU9BLENBQUMsbUVBQWUsR0FBR1Q7QUFDdkNELGFBQWFVLG1CQUFPQSxDQUFDLDJEQUFXLEdBQUdUO0FBQ25DRCxhQUFhVSxtQkFBT0EsQ0FBQyxpRkFBc0IsR0FBR1Q7QUFDOUNELGFBQWFVLG1CQUFPQSxDQUFDLG1GQUF1QixHQUFHVDtBQUMvQ0QsYUFBYVUsbUJBQU9BLENBQUMscUVBQWdCLEdBQUdUO0FBQ3hDRCxhQUFhVSxtQkFBT0EsQ0FBQyx1REFBUyxHQUFHVDtBQUNqQ0QsYUFBYVUsbUJBQU9BLENBQUMsK0RBQVUsR0FBR1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvaW5kZXguanM/YmFiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qcmlvcml0eSA9IGV4cG9ydHMuY3JlYXRlQWN0aW9uID0gdm9pZCAwO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZUFjdGlvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdXRpbHNfMS5jcmVhdGVBY3Rpb247IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQcmlvcml0eVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdXRpbHNfMS5Qcmlvcml0eTsgfSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91c2VNYXRjaGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9LQmFyUG9ydGFsXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9LQmFyUG9zaXRpb25lclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vS0JhclNlYXJjaFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vS0JhclJlc3VsdHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3VzZUtCYXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3VzZVJlZ2lzdGVyQWN0aW9uc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vS0JhckNvbnRleHRQcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vS0JhckFuaW1hdG9yXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYWN0aW9uXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIl9fZXhwb3J0U3RhciIsImV4cG9ydHMiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwidmFsdWUiLCJQcmlvcml0eSIsImNyZWF0ZUFjdGlvbiIsInV0aWxzXzEiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/tinykeys.js":
/*!*******************************************!*\
  !*** ./node_modules/kbar/lib/tinykeys.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Fixes special character issues; `?` -> `shift+/` + build issue\n// https://github.com/jamiebuilds/tinykeys\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/**\n * These are the modifier keys that change the meaning of keybindings.\n *\n * Note: Ignoring \"AltGraph\" because it is covered by the others.\n */ var KEYBINDING_MODIFIER_KEYS = [\n    \"Shift\",\n    \"Meta\",\n    \"Alt\",\n    \"Control\"\n];\n/**\n * Keybinding sequences should timeout if individual key presses are more than\n * 1s apart by default.\n */ var DEFAULT_TIMEOUT = 1000;\n/**\n * Keybinding sequences should bind to this event by default.\n */ var DEFAULT_EVENT = \"keydown\";\n/**\n * An alias for creating platform-specific keybinding aliases.\n */ var MOD = typeof navigator === \"object\" && /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? \"Meta\" : \"Control\";\n/**\n * There's a bug in Chrome that causes event.getModifierState not to exist on\n * KeyboardEvent's for F1/F2/etc keys.\n */ function getModifierState(event, mod) {\n    return typeof event.getModifierState === \"function\" ? event.getModifierState(mod) : false;\n}\n/**\n * Parses a \"Key Binding String\" into its parts\n *\n * grammar    = `<sequence>`\n * <sequence> = `<press> <press> <press> ...`\n * <press>    = `<key>` or `<mods>+<key>`\n * <mods>     = `<mod>+<mod>+...`\n */ function parse(str) {\n    return str.trim().split(\" \").map(function(press) {\n        var mods = press.split(/\\b\\+/);\n        var key = mods.pop();\n        mods = mods.map(function(mod) {\n            return mod === \"$mod\" ? MOD : mod;\n        });\n        return [\n            mods,\n            key\n        ];\n    });\n}\n/**\n * This tells us if a series of events matches a key binding sequence either\n * partially or exactly.\n */ function match(event, press) {\n    // Special characters; `?` `!`\n    if (/^[^A-Za-z0-9]$/.test(event.key) && press[1] === event.key) {\n        return true;\n    }\n    // prettier-ignore\n    return !(// Allow either the `event.key` or the `event.code`\n    // MDN event.key: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n    // MDN event.code: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code\n    press[1].toUpperCase() !== event.key.toUpperCase() && press[1] !== event.code || // Ensure all the modifiers in the keybinding are pressed.\n    press[0].find(function(mod) {\n        return !getModifierState(event, mod);\n    }) || // KEYBINDING_MODIFIER_KEYS (Shift/Control/etc) change the meaning of a\n    // keybinding. So if they are pressed but aren't part of the current\n    // keybinding press, then we don't have a match.\n    KEYBINDING_MODIFIER_KEYS.find(function(mod) {\n        return !press[0].includes(mod) && press[1] !== mod && getModifierState(event, mod);\n    }));\n}\n/**\n * Subscribes to keybindings.\n *\n * Returns an unsubscribe method.\n *\n * @example\n * ```js\n * import keybindings from \"../src/keybindings\"\n *\n * keybindings(window, {\n * \t\"Shift+d\": () => {\n * \t\talert(\"The 'Shift' and 'd' keys were pressed at the same time\")\n * \t},\n * \t\"y e e t\": () => {\n * \t\talert(\"The keys 'y', 'e', 'e', and 't' were pressed in order\")\n * \t},\n * \t\"$mod+d\": () => {\n * \t\talert(\"Either 'Control+d' or 'Meta+d' were pressed\")\n * \t},\n * })\n * ```\n */ function keybindings(target, keyBindingMap, options) {\n    var _a, _b;\n    if (options === void 0) {\n        options = {};\n    }\n    var timeout = (_a = options.timeout) !== null && _a !== void 0 ? _a : DEFAULT_TIMEOUT;\n    var event = (_b = options.event) !== null && _b !== void 0 ? _b : DEFAULT_EVENT;\n    var keyBindings = Object.keys(keyBindingMap).map(function(key) {\n        return [\n            parse(key),\n            keyBindingMap[key]\n        ];\n    });\n    var possibleMatches = new Map();\n    var timer = null;\n    var onKeyEvent = function(event) {\n        // Ensure and stop any event that isn't a full keyboard event.\n        // Autocomplete option navigation and selection would fire a instanceof Event,\n        // instead of the expected KeyboardEvent\n        if (!(event instanceof KeyboardEvent)) {\n            return;\n        }\n        keyBindings.forEach(function(keyBinding) {\n            var sequence = keyBinding[0];\n            var callback = keyBinding[1];\n            var prev = possibleMatches.get(sequence);\n            var remainingExpectedPresses = prev ? prev : sequence;\n            var currentExpectedPress = remainingExpectedPresses[0];\n            var matches = match(event, currentExpectedPress);\n            if (!matches) {\n                // Modifier keydown events shouldn't break sequences\n                // Note: This works because:\n                // - non-modifiers will always return false\n                // - if the current keypress is a modifier then it will return true when we check its state\n                // MDN: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState\n                if (!getModifierState(event, event.key)) {\n                    possibleMatches.delete(sequence);\n                }\n            } else if (remainingExpectedPresses.length > 1) {\n                possibleMatches.set(sequence, remainingExpectedPresses.slice(1));\n            } else {\n                possibleMatches.delete(sequence);\n                callback(event);\n            }\n        });\n        if (timer) {\n            clearTimeout(timer);\n        }\n        // @ts-ignore\n        timer = setTimeout(possibleMatches.clear.bind(possibleMatches), timeout);\n    };\n    target.addEventListener(event, onKeyEvent);\n    return function() {\n        target.removeEventListener(event, onKeyEvent);\n    };\n}\nexports[\"default\"] = keybindings;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/tinykeys.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/types.js":
/*!****************************************!*\
  !*** ./node_modules/kbar/lib/types.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.VisualState = void 0;\nvar VisualState;\n(function(VisualState) {\n    VisualState[\"animatingIn\"] = \"animating-in\";\n    VisualState[\"showing\"] = \"showing\";\n    VisualState[\"animatingOut\"] = \"animating-out\";\n    VisualState[\"hidden\"] = \"hidden\";\n})(VisualState = exports.VisualState || (exports.VisualState = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQixHQUFHLEtBQUs7QUFDM0IsSUFBSUU7QUFDSCxVQUFVQSxXQUFXO0lBQ2xCQSxXQUFXLENBQUMsY0FBYyxHQUFHO0lBQzdCQSxXQUFXLENBQUMsVUFBVSxHQUFHO0lBQ3pCQSxXQUFXLENBQUMsZUFBZSxHQUFHO0lBQzlCQSxXQUFXLENBQUMsU0FBUyxHQUFHO0FBQzVCLEdBQUdBLGNBQWNGLFFBQVFFLFdBQVcsSUFBS0YsQ0FBQUEsbUJBQW1CLEdBQUcsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi90eXBlcy5qcz80NjlkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5WaXN1YWxTdGF0ZSA9IHZvaWQgMDtcbnZhciBWaXN1YWxTdGF0ZTtcbihmdW5jdGlvbiAoVmlzdWFsU3RhdGUpIHtcbiAgICBWaXN1YWxTdGF0ZVtcImFuaW1hdGluZ0luXCJdID0gXCJhbmltYXRpbmctaW5cIjtcbiAgICBWaXN1YWxTdGF0ZVtcInNob3dpbmdcIl0gPSBcInNob3dpbmdcIjtcbiAgICBWaXN1YWxTdGF0ZVtcImFuaW1hdGluZ091dFwiXSA9IFwiYW5pbWF0aW5nLW91dFwiO1xuICAgIFZpc3VhbFN0YXRlW1wiaGlkZGVuXCJdID0gXCJoaWRkZW5cIjtcbn0pKFZpc3VhbFN0YXRlID0gZXhwb3J0cy5WaXN1YWxTdGF0ZSB8fCAoZXhwb3J0cy5WaXN1YWxTdGF0ZSA9IHt9KSk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJWaXN1YWxTdGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useKBar.js":
/*!******************************************!*\
  !*** ./node_modules/kbar/lib/useKBar.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useKBar = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar KBarContextProvider_1 = __webpack_require__(/*! ./KBarContextProvider */ \"(ssr)/./node_modules/kbar/lib/KBarContextProvider.js\");\nfunction useKBar(collector) {\n    var _a = React.useContext(KBarContextProvider_1.KBarContext), query = _a.query, getState = _a.getState, subscribe = _a.subscribe, options = _a.options;\n    var collected = React.useRef(collector === null || collector === void 0 ? void 0 : collector(getState()));\n    var collectorRef = React.useRef(collector);\n    var onCollect = React.useCallback(function(collected) {\n        return __assign(__assign({}, collected), {\n            query: query,\n            options: options\n        });\n    }, [\n        query,\n        options\n    ]);\n    var _b = React.useState(onCollect(collected.current)), render = _b[0], setRender = _b[1];\n    React.useEffect(function() {\n        var unsubscribe;\n        if (collectorRef.current) {\n            unsubscribe = subscribe(function(current) {\n                return collectorRef.current(current);\n            }, function(collected) {\n                return setRender(onCollect(collected));\n            });\n        }\n        return function() {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }, [\n        onCollect,\n        subscribe\n    ]);\n    return render;\n}\nexports.useKBar = useKBar;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdXNlS0Jhci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLFdBQVcsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxRQUFRLElBQUs7SUFDdENBLFdBQVdDLE9BQU9DLE1BQU0sSUFBSSxTQUFTQyxDQUFDO1FBQ2xDLElBQUssSUFBSUMsR0FBR0MsSUFBSSxHQUFHQyxJQUFJQyxVQUFVQyxNQUFNLEVBQUVILElBQUlDLEdBQUdELElBQUs7WUFDakRELElBQUlHLFNBQVMsQ0FBQ0YsRUFBRTtZQUNoQixJQUFLLElBQUlJLEtBQUtMLEVBQUcsSUFBSUgsT0FBT1MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssSUFDekROLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFDbkI7UUFDQSxPQUFPTjtJQUNYO0lBQ0EsT0FBT0gsU0FBU2EsS0FBSyxDQUFDLElBQUksRUFBRU47QUFDaEM7QUFDQSxJQUFJTyxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQU1iLENBQUFBLE9BQU9jLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCakIsT0FBT29CLGNBQWMsQ0FBQ0wsR0FBR0csSUFBSTtRQUFFRyxZQUFZO1FBQU1DLEtBQUs7WUFBYSxPQUFPTixDQUFDLENBQUNDLEVBQUU7UUFBRTtJQUFFO0FBQ3RGLElBQU0sU0FBU0YsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSU0scUJBQXFCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsa0JBQWtCLElBQU12QixDQUFBQSxPQUFPYyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFUyxDQUFDO0lBQ3pGeEIsT0FBT29CLGNBQWMsQ0FBQ0wsR0FBRyxXQUFXO1FBQUVNLFlBQVk7UUFBTUksT0FBT0Q7SUFBRTtBQUNyRSxJQUFLLFNBQVNULENBQUMsRUFBRVMsQ0FBQztJQUNkVCxDQUFDLENBQUMsVUFBVSxHQUFHUztBQUNuQjtBQUNBLElBQUlFLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBVUMsR0FBRztJQUMzRCxJQUFJQSxPQUFPQSxJQUFJQyxVQUFVLEVBQUUsT0FBT0Q7SUFDbEMsSUFBSUUsU0FBUyxDQUFDO0lBQ2QsSUFBSUYsT0FBTyxNQUFNO1FBQUEsSUFBSyxJQUFJVixLQUFLVSxJQUFLLElBQUlWLE1BQU0sYUFBYWpCLE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNnQixLQUFLVixJQUFJSixnQkFBZ0JnQixRQUFRRixLQUFLVjtJQUFFO0lBQ3hJTSxtQkFBbUJNLFFBQVFGO0lBQzNCLE9BQU9FO0FBQ1g7QUFDQTdCLDhDQUE2QztJQUFFeUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REssZUFBZSxHQUFHLEtBQUs7QUFDdkIsSUFBSUUsUUFBUU4sYUFBYU8sbUJBQU9BLENBQUMsd0dBQU87QUFDeEMsSUFBSUMsd0JBQXdCRCxtQkFBT0EsQ0FBQyxtRkFBdUI7QUFDM0QsU0FBU0YsUUFBUUksU0FBUztJQUN0QixJQUFJQyxLQUFLSixNQUFNSyxVQUFVLENBQUNILHNCQUFzQkksV0FBVyxHQUFHQyxRQUFRSCxHQUFHRyxLQUFLLEVBQUVDLFdBQVdKLEdBQUdJLFFBQVEsRUFBRUMsWUFBWUwsR0FBR0ssU0FBUyxFQUFFQyxVQUFVTixHQUFHTSxPQUFPO0lBQ3RKLElBQUlDLFlBQVlYLE1BQU1ZLE1BQU0sQ0FBQ1QsY0FBYyxRQUFRQSxjQUFjLEtBQUssSUFBSSxLQUFLLElBQUlBLFVBQVVLO0lBQzdGLElBQUlLLGVBQWViLE1BQU1ZLE1BQU0sQ0FBQ1Q7SUFDaEMsSUFBSVcsWUFBWWQsTUFBTWUsV0FBVyxDQUFDLFNBQVVKLFNBQVM7UUFBSSxPQUFRNUMsU0FBU0EsU0FBUyxDQUFDLEdBQUc0QyxZQUFZO1lBQUVKLE9BQU9BO1lBQU9HLFNBQVNBO1FBQVE7SUFBSyxHQUFHO1FBQUNIO1FBQU9HO0tBQVE7SUFDNUosSUFBSU0sS0FBS2hCLE1BQU1pQixRQUFRLENBQUNILFVBQVVILFVBQVVPLE9BQU8sSUFBSUMsU0FBU0gsRUFBRSxDQUFDLEVBQUUsRUFBRUksWUFBWUosRUFBRSxDQUFDLEVBQUU7SUFDeEZoQixNQUFNcUIsU0FBUyxDQUFDO1FBQ1osSUFBSUM7UUFDSixJQUFJVCxhQUFhSyxPQUFPLEVBQUU7WUFDdEJJLGNBQWNiLFVBQVUsU0FBVVMsT0FBTztnQkFBSSxPQUFPTCxhQUFhSyxPQUFPLENBQUNBO1lBQVUsR0FBRyxTQUFVUCxTQUFTO2dCQUFJLE9BQU9TLFVBQVVOLFVBQVVIO1lBQWE7UUFDeko7UUFDQSxPQUFPO1lBQ0gsSUFBSVcsYUFBYTtnQkFDYkE7WUFDSjtRQUNKO0lBQ0osR0FBRztRQUFDUjtRQUFXTDtLQUFVO0lBQ3pCLE9BQU9VO0FBQ1g7QUFDQXJCLGVBQWUsR0FBR0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdXNlS0Jhci5qcz9iZjY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51c2VLQmFyID0gdm9pZCAwO1xudmFyIFJlYWN0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgS0JhckNvbnRleHRQcm92aWRlcl8xID0gcmVxdWlyZShcIi4vS0JhckNvbnRleHRQcm92aWRlclwiKTtcbmZ1bmN0aW9uIHVzZUtCYXIoY29sbGVjdG9yKSB7XG4gICAgdmFyIF9hID0gUmVhY3QudXNlQ29udGV4dChLQmFyQ29udGV4dFByb3ZpZGVyXzEuS0JhckNvbnRleHQpLCBxdWVyeSA9IF9hLnF1ZXJ5LCBnZXRTdGF0ZSA9IF9hLmdldFN0YXRlLCBzdWJzY3JpYmUgPSBfYS5zdWJzY3JpYmUsIG9wdGlvbnMgPSBfYS5vcHRpb25zO1xuICAgIHZhciBjb2xsZWN0ZWQgPSBSZWFjdC51c2VSZWYoY29sbGVjdG9yID09PSBudWxsIHx8IGNvbGxlY3RvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29sbGVjdG9yKGdldFN0YXRlKCkpKTtcbiAgICB2YXIgY29sbGVjdG9yUmVmID0gUmVhY3QudXNlUmVmKGNvbGxlY3Rvcik7XG4gICAgdmFyIG9uQ29sbGVjdCA9IFJlYWN0LnVzZUNhbGxiYWNrKGZ1bmN0aW9uIChjb2xsZWN0ZWQpIHsgcmV0dXJuIChfX2Fzc2lnbihfX2Fzc2lnbih7fSwgY29sbGVjdGVkKSwgeyBxdWVyeTogcXVlcnksIG9wdGlvbnM6IG9wdGlvbnMgfSkpOyB9LCBbcXVlcnksIG9wdGlvbnNdKTtcbiAgICB2YXIgX2IgPSBSZWFjdC51c2VTdGF0ZShvbkNvbGxlY3QoY29sbGVjdGVkLmN1cnJlbnQpKSwgcmVuZGVyID0gX2JbMF0sIHNldFJlbmRlciA9IF9iWzFdO1xuICAgIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB1bnN1YnNjcmliZTtcbiAgICAgICAgaWYgKGNvbGxlY3RvclJlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICB1bnN1YnNjcmliZSA9IHN1YnNjcmliZShmdW5jdGlvbiAoY3VycmVudCkgeyByZXR1cm4gY29sbGVjdG9yUmVmLmN1cnJlbnQoY3VycmVudCk7IH0sIGZ1bmN0aW9uIChjb2xsZWN0ZWQpIHsgcmV0dXJuIHNldFJlbmRlcihvbkNvbGxlY3QoY29sbGVjdGVkKSk7IH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodW5zdWJzY3JpYmUpIHtcbiAgICAgICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0sIFtvbkNvbGxlY3QsIHN1YnNjcmliZV0pO1xuICAgIHJldHVybiByZW5kZXI7XG59XG5leHBvcnRzLnVzZUtCYXIgPSB1c2VLQmFyO1xuIl0sIm5hbWVzIjpbIl9fYXNzaWduIiwiT2JqZWN0IiwiYXNzaWduIiwidCIsInMiLCJpIiwibiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsIl9fY3JlYXRlQmluZGluZyIsImNyZWF0ZSIsIm8iLCJtIiwiayIsImsyIiwidW5kZWZpbmVkIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX19zZXRNb2R1bGVEZWZhdWx0IiwidiIsInZhbHVlIiwiX19pbXBvcnRTdGFyIiwibW9kIiwiX19lc01vZHVsZSIsInJlc3VsdCIsImV4cG9ydHMiLCJ1c2VLQmFyIiwiUmVhY3QiLCJyZXF1aXJlIiwiS0JhckNvbnRleHRQcm92aWRlcl8xIiwiY29sbGVjdG9yIiwiX2EiLCJ1c2VDb250ZXh0IiwiS0JhckNvbnRleHQiLCJxdWVyeSIsImdldFN0YXRlIiwic3Vic2NyaWJlIiwib3B0aW9ucyIsImNvbGxlY3RlZCIsInVzZVJlZiIsImNvbGxlY3RvclJlZiIsIm9uQ29sbGVjdCIsInVzZUNhbGxiYWNrIiwiX2IiLCJ1c2VTdGF0ZSIsImN1cnJlbnQiLCJyZW5kZXIiLCJzZXRSZW5kZXIiLCJ1c2VFZmZlY3QiLCJ1bnN1YnNjcmliZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useKBar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useMatches.js":
/*!*********************************************!*\
  !*** ./node_modules/kbar/lib/useMatches.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useDeepMatches = exports.useMatches = exports.NO_GROUP = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar fuse_js_1 = __importDefault(__webpack_require__(/*! fuse.js */ \"(ssr)/./node_modules/fuse.js/dist/fuse.esm.js\"));\nexports.NO_GROUP = {\n    name: \"none\",\n    priority: utils_1.Priority.NORMAL\n};\nvar fuseOptions = {\n    keys: [\n        {\n            name: \"name\",\n            weight: 0.5\n        },\n        {\n            name: \"keywords\",\n            getFn: function(item) {\n                var _a;\n                return ((_a = item.keywords) !== null && _a !== void 0 ? _a : \"\").split(\",\");\n            },\n            weight: 0.5\n        },\n        \"subtitle\"\n    ],\n    ignoreLocation: true,\n    includeScore: true,\n    includeMatches: true,\n    threshold: 0.2,\n    minMatchCharLength: 1\n};\nfunction order(a, b) {\n    /**\n     * Larger the priority = higher up the list\n     */ return b.priority - a.priority;\n}\n/**\n * returns deep matches only when a search query is present\n */ function useMatches() {\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            search: state.searchQuery,\n            actions: state.actions,\n            rootActionId: state.currentRootActionId\n        };\n    }), search = _a.search, actions = _a.actions, rootActionId = _a.rootActionId;\n    var rootResults = React.useMemo(function() {\n        return Object.keys(actions).reduce(function(acc, actionId) {\n            var action = actions[actionId];\n            if (!action.parent && !rootActionId) {\n                acc.push(action);\n            }\n            if (action.id === rootActionId) {\n                for(var i = 0; i < action.children.length; i++){\n                    acc.push(action.children[i]);\n                }\n            }\n            return acc;\n        }, []).sort(order);\n    }, [\n        actions,\n        rootActionId\n    ]);\n    var getDeepResults = React.useCallback(function(actions) {\n        var actionsClone = [];\n        for(var i = 0; i < actions.length; i++){\n            actionsClone.push(actions[i]);\n        }\n        return function collectChildren(actions, all) {\n            if (all === void 0) {\n                all = actionsClone;\n            }\n            for(var i = 0; i < actions.length; i++){\n                if (actions[i].children.length > 0) {\n                    var childsChildren = actions[i].children;\n                    for(var i_1 = 0; i_1 < childsChildren.length; i_1++){\n                        all.push(childsChildren[i_1]);\n                    }\n                    collectChildren(actions[i].children, all);\n                }\n            }\n            return all;\n        }(actions);\n    }, []);\n    var emptySearch = !search;\n    var filtered = React.useMemo(function() {\n        if (emptySearch) return rootResults;\n        return getDeepResults(rootResults);\n    }, [\n        getDeepResults,\n        rootResults,\n        emptySearch\n    ]);\n    var fuse = React.useMemo(function() {\n        return new fuse_js_1.default(filtered, fuseOptions);\n    }, [\n        filtered\n    ]);\n    var matches = useInternalMatches(filtered, search, fuse);\n    var results = React.useMemo(function() {\n        var _a, _b;\n        /**\n         * Store a reference to a section and it's list of actions.\n         * Alongside these actions, we'll keep a temporary record of the\n         * final priority calculated by taking the commandScore + the\n         * explicitly set `action.priority` value.\n         */ var map = {};\n        /**\n         * Store another reference to a list of sections alongside\n         * the section's final priority, calculated the same as above.\n         */ var list = [];\n        /**\n         * We'll take the list above and sort by its priority. Then we'll\n         * collect all actions from the map above for this specific name and\n         * sort by its priority as well.\n         */ var ordered = [];\n        for(var i = 0; i < matches.length; i++){\n            var match = matches[i];\n            var action = match.action;\n            var score = match.score || utils_1.Priority.NORMAL;\n            var section = {\n                name: typeof action.section === \"string\" ? action.section : ((_a = action.section) === null || _a === void 0 ? void 0 : _a.name) || exports.NO_GROUP.name,\n                priority: typeof action.section === \"string\" ? score : ((_b = action.section) === null || _b === void 0 ? void 0 : _b.priority) || 0 + score\n            };\n            if (!map[section.name]) {\n                map[section.name] = [];\n                list.push(section);\n            }\n            map[section.name].push({\n                priority: action.priority + score,\n                action: action\n            });\n        }\n        ordered = list.sort(order).map(function(group) {\n            return {\n                name: group.name,\n                actions: map[group.name].sort(order).map(function(item) {\n                    return item.action;\n                })\n            };\n        });\n        /**\n         * Our final result is simply flattening the ordered list into\n         * our familiar (ActionImpl | string)[] shape.\n         */ var results = [];\n        for(var i = 0; i < ordered.length; i++){\n            var group = ordered[i];\n            if (group.name !== exports.NO_GROUP.name) results.push(group.name);\n            for(var i_2 = 0; i_2 < group.actions.length; i_2++){\n                results.push(group.actions[i_2]);\n            }\n        }\n        return results;\n    }, [\n        matches\n    ]);\n    // ensure that users have an accurate `currentRootActionId`\n    // that syncs with the throttled return value.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var memoRootActionId = React.useMemo(function() {\n        return rootActionId;\n    }, [\n        results\n    ]);\n    return React.useMemo(function() {\n        return {\n            results: results,\n            rootActionId: memoRootActionId\n        };\n    }, [\n        memoRootActionId,\n        results\n    ]);\n}\nexports.useMatches = useMatches;\nfunction useInternalMatches(filtered, search, fuse) {\n    var value = React.useMemo(function() {\n        return {\n            filtered: filtered,\n            search: search\n        };\n    }, [\n        filtered,\n        search\n    ]);\n    var _a = (0, utils_1.useThrottledValue)(value), throttledFiltered = _a.filtered, throttledSearch = _a.search;\n    return React.useMemo(function() {\n        if (throttledSearch.trim() === \"\") {\n            return throttledFiltered.map(function(action) {\n                return {\n                    score: 0,\n                    action: action\n                };\n            });\n        }\n        var matches = [];\n        // Use Fuse's `search` method to perform the search efficiently\n        var searchResults = fuse.search(throttledSearch);\n        // Format the search results to match the existing structure\n        matches = searchResults.map(function(_a) {\n            var action = _a.item, score = _a.score;\n            return {\n                score: 1 / ((score !== null && score !== void 0 ? score : 0) + 1),\n                action: action\n            };\n        });\n        return matches;\n    }, [\n        throttledFiltered,\n        throttledSearch,\n        fuse\n    ]);\n}\n/**\n * @deprecated use useMatches\n */ exports.useDeepMatches = useMatches;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useMatches.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useRegisterActions.js":
/*!*****************************************************!*\
  !*** ./node_modules/kbar/lib/useRegisterActions.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useRegisterActions = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nfunction useRegisterActions(actions, dependencies) {\n    if (dependencies === void 0) {\n        dependencies = [];\n    }\n    var query = (0, useKBar_1.useKBar)().query;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var actionsCache = React.useMemo(function() {\n        return actions;\n    }, dependencies);\n    React.useEffect(function() {\n        if (!actionsCache.length) {\n            return;\n        }\n        var unregister = query.registerActions(actionsCache);\n        return function() {\n            unregister();\n        };\n    }, [\n        query,\n        actionsCache\n    ]);\n}\nexports.useRegisterActions = useRegisterActions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdXNlUmVnaXN0ZXJBY3Rpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkosT0FBT08sY0FBYyxDQUFDTCxHQUFHRyxJQUFJO1FBQUVHLFlBQVk7UUFBTUMsS0FBSztZQUFhLE9BQU9OLENBQUMsQ0FBQ0MsRUFBRTtRQUFFO0lBQUU7QUFDdEYsSUFBTSxTQUFTRixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJTSxxQkFBcUIsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxrQkFBa0IsSUFBTVYsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRVMsQ0FBQztJQUN6RlgsT0FBT08sY0FBYyxDQUFDTCxHQUFHLFdBQVc7UUFBRU0sWUFBWTtRQUFNSSxPQUFPRDtJQUFFO0FBQ3JFLElBQUssU0FBU1QsQ0FBQyxFQUFFUyxDQUFDO0lBQ2RULENBQUMsQ0FBQyxVQUFVLEdBQUdTO0FBQ25CO0FBQ0EsSUFBSUUsZUFBZSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFlBQVksSUFBSyxTQUFVQyxHQUFHO0lBQzNELElBQUlBLE9BQU9BLElBQUlDLFVBQVUsRUFBRSxPQUFPRDtJQUNsQyxJQUFJRSxTQUFTLENBQUM7SUFDZCxJQUFJRixPQUFPLE1BQU07UUFBQSxJQUFLLElBQUlWLEtBQUtVLElBQUssSUFBSVYsTUFBTSxhQUFhSixPQUFPaUIsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0wsS0FBS1YsSUFBSUwsZ0JBQWdCaUIsUUFBUUYsS0FBS1Y7SUFBRTtJQUN4SU0sbUJBQW1CTSxRQUFRRjtJQUMzQixPQUFPRTtBQUNYO0FBQ0FoQiw4Q0FBNkM7SUFBRVksT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RFEsMEJBQTBCLEdBQUcsS0FBSztBQUNsQyxJQUFJRSxRQUFRVCxhQUFhVSxtQkFBT0EsQ0FBQyx3R0FBTztBQUN4QyxJQUFJQyxZQUFZRCxtQkFBT0EsQ0FBQywyREFBVztBQUNuQyxTQUFTRixtQkFBbUJJLE9BQU8sRUFBRUMsWUFBWTtJQUM3QyxJQUFJQSxpQkFBaUIsS0FBSyxHQUFHO1FBQUVBLGVBQWUsRUFBRTtJQUFFO0lBQ2xELElBQUlDLFFBQVEsQ0FBQyxHQUFHSCxVQUFVSSxPQUFPLElBQUlELEtBQUs7SUFDMUMsdURBQXVEO0lBQ3ZELElBQUlFLGVBQWVQLE1BQU1RLE9BQU8sQ0FBQztRQUFjLE9BQU9MO0lBQVMsR0FBR0M7SUFDbEVKLE1BQU1TLFNBQVMsQ0FBQztRQUNaLElBQUksQ0FBQ0YsYUFBYUcsTUFBTSxFQUFFO1lBQ3RCO1FBQ0o7UUFDQSxJQUFJQyxhQUFhTixNQUFNTyxlQUFlLENBQUNMO1FBQ3ZDLE9BQU87WUFDSEk7UUFDSjtJQUNKLEdBQUc7UUFBQ047UUFBT0U7S0FBYTtBQUM1QjtBQUNBVCwwQkFBMEIsR0FBR0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdXNlUmVnaXN0ZXJBY3Rpb25zLmpzPzU3NTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlUmVnaXN0ZXJBY3Rpb25zID0gdm9pZCAwO1xudmFyIFJlYWN0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgdXNlS0Jhcl8xID0gcmVxdWlyZShcIi4vdXNlS0JhclwiKTtcbmZ1bmN0aW9uIHVzZVJlZ2lzdGVyQWN0aW9ucyhhY3Rpb25zLCBkZXBlbmRlbmNpZXMpIHtcbiAgICBpZiAoZGVwZW5kZW5jaWVzID09PSB2b2lkIDApIHsgZGVwZW5kZW5jaWVzID0gW107IH1cbiAgICB2YXIgcXVlcnkgPSAoMCwgdXNlS0Jhcl8xLnVzZUtCYXIpKCkucXVlcnk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICAgIHZhciBhY3Rpb25zQ2FjaGUgPSBSZWFjdC51c2VNZW1vKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjdGlvbnM7IH0sIGRlcGVuZGVuY2llcyk7XG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCFhY3Rpb25zQ2FjaGUubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHVucmVnaXN0ZXIgPSBxdWVyeS5yZWdpc3RlckFjdGlvbnMoYWN0aW9uc0NhY2hlKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHVucmVnaXN0ZXIoKTtcbiAgICAgICAgfTtcbiAgICB9LCBbcXVlcnksIGFjdGlvbnNDYWNoZV0pO1xufVxuZXhwb3J0cy51c2VSZWdpc3RlckFjdGlvbnMgPSB1c2VSZWdpc3RlckFjdGlvbnM7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJfX3NldE1vZHVsZURlZmF1bHQiLCJ2IiwidmFsdWUiLCJfX2ltcG9ydFN0YXIiLCJtb2QiLCJfX2VzTW9kdWxlIiwicmVzdWx0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZXhwb3J0cyIsInVzZVJlZ2lzdGVyQWN0aW9ucyIsIlJlYWN0IiwicmVxdWlyZSIsInVzZUtCYXJfMSIsImFjdGlvbnMiLCJkZXBlbmRlbmNpZXMiLCJxdWVyeSIsInVzZUtCYXIiLCJhY3Rpb25zQ2FjaGUiLCJ1c2VNZW1vIiwidXNlRWZmZWN0IiwibGVuZ3RoIiwidW5yZWdpc3RlciIsInJlZ2lzdGVyQWN0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useRegisterActions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useStore.js":
/*!*******************************************!*\
  !*** ./node_modules/kbar/lib/useStore.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useStore = void 0;\nvar fast_equals_1 = __webpack_require__(/*! fast-equals */ \"(ssr)/./node_modules/fast-equals/dist/fast-equals.esm.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar tiny_invariant_1 = __importDefault(__webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\nvar ActionInterface_1 = __webpack_require__(/*! ./action/ActionInterface */ \"(ssr)/./node_modules/kbar/lib/action/ActionInterface.js\");\nvar HistoryImpl_1 = __webpack_require__(/*! ./action/HistoryImpl */ \"(ssr)/./node_modules/kbar/lib/action/HistoryImpl.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nfunction useStore(props) {\n    var optionsRef = React.useRef(__assign({\n        animations: {\n            enterMs: 200,\n            exitMs: 100\n        }\n    }, props.options));\n    var actionsInterface = React.useMemo(function() {\n        return new ActionInterface_1.ActionInterface(props.actions || [], {\n            historyManager: optionsRef.current.enableHistory ? HistoryImpl_1.history : undefined\n        });\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // TODO: at this point useReducer might be a better approach to managing state.\n    var _a = React.useState({\n        searchQuery: \"\",\n        currentRootActionId: null,\n        visualState: types_1.VisualState.hidden,\n        actions: __assign({}, actionsInterface.actions),\n        activeIndex: 0,\n        disabled: false\n    }), state = _a[0], setState = _a[1];\n    var currState = React.useRef(state);\n    currState.current = state;\n    var getState = React.useCallback(function() {\n        return currState.current;\n    }, []);\n    var publisher = React.useMemo(function() {\n        return new Publisher(getState);\n    }, [\n        getState\n    ]);\n    React.useEffect(function() {\n        currState.current = state;\n        publisher.notify();\n    }, [\n        state,\n        publisher\n    ]);\n    var registerActions = React.useCallback(function(actions) {\n        setState(function(state) {\n            return __assign(__assign({}, state), {\n                actions: actionsInterface.add(actions)\n            });\n        });\n        return function unregister() {\n            setState(function(state) {\n                return __assign(__assign({}, state), {\n                    actions: actionsInterface.remove(actions)\n                });\n            });\n        };\n    }, [\n        actionsInterface\n    ]);\n    var inputRef = React.useRef(null);\n    return React.useMemo(function() {\n        var query = {\n            setCurrentRootAction: function(actionId) {\n                setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        currentRootActionId: actionId\n                    });\n                });\n            },\n            setVisualState: function(cb) {\n                setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        visualState: typeof cb === \"function\" ? cb(state.visualState) : cb\n                    });\n                });\n            },\n            setSearch: function(searchQuery) {\n                return setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        searchQuery: searchQuery\n                    });\n                });\n            },\n            registerActions: registerActions,\n            toggle: function() {\n                return setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        visualState: [\n                            types_1.VisualState.animatingOut,\n                            types_1.VisualState.hidden\n                        ].includes(state.visualState) ? types_1.VisualState.animatingIn : types_1.VisualState.animatingOut\n                    });\n                });\n            },\n            setActiveIndex: function(cb) {\n                return setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        activeIndex: typeof cb === \"number\" ? cb : cb(state.activeIndex)\n                    });\n                });\n            },\n            inputRefSetter: function(el) {\n                inputRef.current = el;\n            },\n            getInput: function() {\n                (0, tiny_invariant_1.default)(inputRef.current, \"Input ref is undefined, make sure you attach `query.inputRefSetter` to your search input.\");\n                return inputRef.current;\n            },\n            disable: function(disable) {\n                setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        disabled: disable\n                    });\n                });\n            }\n        };\n        return {\n            getState: getState,\n            query: query,\n            options: optionsRef.current,\n            subscribe: function(collector, cb) {\n                return publisher.subscribe(collector, cb);\n            }\n        };\n    }, [\n        getState,\n        publisher,\n        registerActions\n    ]);\n}\nexports.useStore = useStore;\nvar Publisher = /** @class */ function() {\n    function Publisher(getState) {\n        this.subscribers = [];\n        this.getState = getState;\n    }\n    Publisher.prototype.subscribe = function(collector, onChange) {\n        var _this = this;\n        var subscriber = new Subscriber(function() {\n            return collector(_this.getState());\n        }, onChange);\n        this.subscribers.push(subscriber);\n        return this.unsubscribe.bind(this, subscriber);\n    };\n    Publisher.prototype.unsubscribe = function(subscriber) {\n        if (this.subscribers.length) {\n            var index = this.subscribers.indexOf(subscriber);\n            if (index > -1) {\n                return this.subscribers.splice(index, 1);\n            }\n        }\n    };\n    Publisher.prototype.notify = function() {\n        this.subscribers.forEach(function(subscriber) {\n            return subscriber.collect();\n        });\n    };\n    return Publisher;\n}();\nvar Subscriber = /** @class */ function() {\n    function Subscriber(collector, onChange) {\n        this.collector = collector;\n        this.onChange = onChange;\n    }\n    Subscriber.prototype.collect = function() {\n        try {\n            // grab latest state\n            var recollect = this.collector();\n            if (!(0, fast_equals_1.deepEqual)(recollect, this.collected)) {\n                this.collected = recollect;\n                if (this.onChange) {\n                    this.onChange(this.collected);\n                }\n            }\n        } catch (error) {\n            console.warn(error);\n        }\n    };\n    return Subscriber;\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useStore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/utils.js":
/*!****************************************!*\
  !*** ./node_modules/kbar/lib/utils.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (void 0) && (void 0).__spreadArray || function(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Priority = exports.isModKey = exports.shouldRejectKeystrokes = exports.useThrottledValue = exports.getScrollbarWidth = exports.useIsomorphicLayout = exports.noop = exports.createAction = exports.randomId = exports.usePointerMovedSinceMount = exports.useOuterClick = exports.swallowEvent = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nfunction swallowEvent(event) {\n    event.stopPropagation();\n    event.preventDefault();\n}\nexports.swallowEvent = swallowEvent;\nfunction useOuterClick(dom, cb) {\n    var cbRef = React.useRef(cb);\n    cbRef.current = cb;\n    React.useEffect(function() {\n        function handler(event) {\n            var _a, _b;\n            if (((_a = dom.current) === null || _a === void 0 ? void 0 : _a.contains(event.target)) || // Add support for ReactShadowRoot\n            // @ts-expect-error wrong types, the `host` property exists https://stackoverflow.com/a/25340456\n            event.target === ((_b = dom.current) === null || _b === void 0 ? void 0 : _b.getRootNode().host)) {\n                return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n            cbRef.current();\n        }\n        window.addEventListener(\"pointerdown\", handler, true);\n        return function() {\n            return window.removeEventListener(\"pointerdown\", handler, true);\n        };\n    }, [\n        dom\n    ]);\n}\nexports.useOuterClick = useOuterClick;\nfunction usePointerMovedSinceMount() {\n    var _a = React.useState(false), moved = _a[0], setMoved = _a[1];\n    React.useEffect(function() {\n        function handler() {\n            setMoved(true);\n        }\n        if (!moved) {\n            window.addEventListener(\"pointermove\", handler);\n            return function() {\n                return window.removeEventListener(\"pointermove\", handler);\n            };\n        }\n    }, [\n        moved\n    ]);\n    return moved;\n}\nexports.usePointerMovedSinceMount = usePointerMovedSinceMount;\nfunction randomId() {\n    return Math.random().toString(36).substring(2, 9);\n}\nexports.randomId = randomId;\nfunction createAction(params) {\n    return __assign({\n        id: randomId()\n    }, params);\n}\nexports.createAction = createAction;\nfunction noop() {}\nexports.noop = noop;\nexports.useIsomorphicLayout =  true ? noop : 0;\n// https://stackoverflow.com/questions/13382516/getting-scroll-bar-width-using-javascript\nfunction getScrollbarWidth() {\n    var outer = document.createElement(\"div\");\n    outer.style.visibility = \"hidden\";\n    outer.style.overflow = \"scroll\";\n    document.body.appendChild(outer);\n    var inner = document.createElement(\"div\");\n    outer.appendChild(inner);\n    var scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n    return scrollbarWidth;\n}\nexports.getScrollbarWidth = getScrollbarWidth;\nfunction useThrottledValue(value, ms) {\n    if (ms === void 0) {\n        ms = 100;\n    }\n    var _a = React.useState(value), throttledValue = _a[0], setThrottledValue = _a[1];\n    var lastRan = React.useRef(Date.now());\n    React.useEffect(function() {\n        if (ms === 0) return;\n        var timeout = setTimeout(function() {\n            setThrottledValue(value);\n            lastRan.current = Date.now();\n        }, lastRan.current - (Date.now() - ms));\n        return function() {\n            clearTimeout(timeout);\n        };\n    }, [\n        ms,\n        value\n    ]);\n    return ms === 0 ? value : throttledValue;\n}\nexports.useThrottledValue = useThrottledValue;\nfunction shouldRejectKeystrokes(_a) {\n    var _b, _c, _d;\n    var _e = _a === void 0 ? {\n        ignoreWhenFocused: []\n    } : _a, ignoreWhenFocused = _e.ignoreWhenFocused;\n    var inputs = __spreadArray([\n        \"input\",\n        \"textarea\"\n    ], ignoreWhenFocused, true).map(function(el) {\n        return el.toLowerCase();\n    });\n    var activeElement = document.activeElement;\n    var ignoreStrokes = activeElement && (inputs.indexOf(activeElement.tagName.toLowerCase()) !== -1 || ((_b = activeElement.attributes.getNamedItem(\"role\")) === null || _b === void 0 ? void 0 : _b.value) === \"textbox\" || ((_c = activeElement.attributes.getNamedItem(\"contenteditable\")) === null || _c === void 0 ? void 0 : _c.value) === \"true\" || ((_d = activeElement.attributes.getNamedItem(\"contenteditable\")) === null || _d === void 0 ? void 0 : _d.value) === \"plaintext-only\");\n    return ignoreStrokes;\n}\nexports.shouldRejectKeystrokes = shouldRejectKeystrokes;\nvar SSR = \"undefined\" === \"undefined\";\nvar isMac = !SSR && window.navigator.platform === \"MacIntel\";\nfunction isModKey(event) {\n    return isMac ? event.metaKey : event.ctrlKey;\n}\nexports.isModKey = isModKey;\nexports.Priority = {\n    HIGH: 1,\n    NORMAL: 0,\n    LOW: -1\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/utils.js\n");

/***/ })

};
;